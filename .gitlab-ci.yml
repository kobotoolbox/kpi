stages:
  - build
  - test
  - deploy

include:
  - template: SAST.gitlab-ci.yml

build:
  image: docker
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - CI_COMMIT_REF_NAME_SANITIZED=${CI_COMMIT_REF_NAME/\#/-}
    - CI_COMMIT_REF_NAME_SANITIZED=${CI_COMMIT_REF_NAME_SANITIZED//\//-}
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME_SANITIZED || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME_SANITIZED --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME_SANITIZED .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME_SANITIZED
deploy-beta:
  stage: deploy
  image:
    name: alpine/helm:3.12.0
    entrypoint: [""]
  script:
    - helm repo add kobo https://gitlab.com/api/v4/projects/32216873/packages/helm/stable
    - helm -n kobo-dev upgrade beta kobo/kobo --atomic --set-string kpi.image.tag=${CI_COMMIT_SHORT_SHA} --reuse-values
  environment:
    name: beta
    url: https://kf.beta.kobotoolbox.org
  only:
    refs:
      - public-beta
    variables:
      - $CI_COMMIT_REF_PROTECTED

deploy-staging:
  stage: deploy
  image:
    name: alpine/helm
    entrypoint: [""]
  script:
    - BRANCH_TITLE=${CI_COMMIT_BRANCH#feature/}
    - helm repo add kobo https://gitlab.com/api/v4/projects/32216873/packages/helm/stable
    - |
      if [ "$CI_COMMIT_BRANCH" = "main" ]; then
        helm -n kobo-dev upgrade staging-main kobo/kobo --atomic --set-string kpi.image.tag=${CI_COMMIT_SHORT_SHA} --reuse-values
        helm -n kobo-dev upgrade staging-nobill kobo/kobo --atomic --set-string kpi.image.tag=${CI_COMMIT_SHORT_SHA} --reuse-values
      else
        helm -n kobo-dev upgrade --install $BRANCH_TITLE kobo/kobo --atomic --set-string kpi.image.tag=${CI_COMMIT_SHORT_SHA} --reuse-values
      fi
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(feature\/)/ && $CI_COMMIT_REF_PROTECTED
    - if: $CI_COMMIT_BRANCH == "main"

pages:
  stage: deploy
  image: node:18
  script:
    - apt-get update && apt-get install python-is-python3
    - npm i --force
    - npm run build-storybook -- -o public
  artifacts:
    paths:
      - public
  only:
    refs:
      - main
      - storybook
