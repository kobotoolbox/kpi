@use 'scss/mixins';
@use 'scss/colors';
@use 'scss/z-indexes';
@use 'scss/breakpoints';
@use 'sass:color';
@use 'js/components/common/icon';
@use 'js/components/common/button';

$kobo-modal-elements-height-min: 60px;
$kobo-modal-width-min: 280px;
$kobo-modal-width-large: 940px;
$kobo-modal-width-medium: 570px;
$kobo-modal-padding: 30px;
$kobo-modal-header-icon-margin: 10px;

.kobo-modal {
  position: fixed;
  border-radius: 6px;
  max-width: 90vw;
  max-height: 90vh;
  min-width: $kobo-modal-width-min;
  left: 50%;
  top: 50%;
  background-color: colors.$kobo-white;
  box-shadow: 0 0 12px 0 color.change(colors.$kobo-gray-800, $alpha: 0.25);
  display: flex;
  flex-direction: column;

  // It's set on purpose here to make sure no one will make it hidden, as we
  // need some content to be overflowing (e.g. dropdowns).
  overflow: visible;

  @media all and (max-height: breakpoints.$b480) {
    transform: translate(-50%, -50%);

    // This ensures that modal layout is better adapting to very short screens.
    .kobo-modal__header,
    .kobo-modal__content,
    .kobo-modal__footer {
      min-height: $kobo-modal-elements-height-min;
    }
  }

  @media all and (min-height: (breakpoints.$b480 + 1px)) {
    transform: translate(-50%, -55%);
  }
}

.kobo-modal--size-large {
  width: $kobo-modal-width-large;
}

.kobo-modal--size-medium {
  width: $kobo-modal-width-medium;
}

.kobo-modal__footer--isCentered {
  justify-content: center !important;
}

.kobo-modal__header {
  @include mixins.centerRowFlex;

  justify-content: space-between;
  padding: $kobo-modal-padding;
  border-radius: 6px 6px 0 0;

  &.kobo-modal__header--red {
    background-color: color.change(colors.$kobo-mid-red, $alpha: 0.1);
  }
  &.kobo-modal__header--grey {
    background-color: colors.$kobo-gray-100;
  }
  &.kobo-modal__header--white {
    background-color: colors.$kobo-white;
  }

  h1 {
    @include mixins.centerRowFlex;

    flex: 1;
    color: colors.$kobo-gray-800;
    font-size: 18px;
    font-weight: 700;
    margin: 0;
    line-height: 1;
    margin-inline-end: 10px;

    // If there is close button, we need to limit the width (for a long content)
    &:not(:only-child) {
      max-width: calc(100% - button.$button-height-s);
    }
  }
}

.kobo-modal__header-icon {
  display: block;
  margin-right: $kobo-modal-header-icon-margin;

  &.kobo-modal__header-icon--blue {
    color: colors.$kobo-blue;
  }

  &.kobo-modal__header-icon--red {
    color: colors.$kobo-red;
  }

  &.kobo-modal__header-icon--storm {
    color: colors.$kobo-storm;
  }
}

.kobo-modal__content {
  overflow-x: auto;
  padding: $kobo-modal-padding;

  > ul,
  > ol,
  > p {
    margin: 0;

    &:not(:first-child) {
      margin-top: 1em;
    }
  }
}

.kobo-modal__footer {
  @include mixins.centerRowFlex;
  gap: 8px;
  padding: $kobo-modal-padding;

  &.kobo-modal__footer--center {
    justify-content: center;
  }

  &.kobo-modal__footer--end {
    justify-content: flex-end;
  }
}

// If the KoboModalContent component is used together with the KoboModalFooter
// component, we want the paddings not to multiply.
.kobo-modal__content + .kobo-modal__footer {
  padding-top: 0;
}

.kobo-modal-overlay {
  position: fixed;
  z-index: z-indexes.$z-modal;
  inset: 0;
  background-color: color.change(colors.$kobo-storm, $alpha: 0.6);
}
