@use 'scss/colors';
@use 'scss/mixins';

$avatar-size-s: 24px;
$avatar-size-m: 32px;
$avatar-size-l: 48px;

@mixin avatar-size($size) {
  // This is the gap between the initials and the (optional) username
  gap: $size * 0.25;

  .initials {
    width: $size;
    height: $size;
    border-radius: $size;
    line-height: $size;
    font-size: $size * 0.6;
  }
}

.avatar {
  display: inline-flex;
  flex-direction: row;
  align-content: center;
  align-items: center;
}

.avatar-size-s {
  @include avatar-size($avatar-size-s);
}

.avatar-size-m {
  @include avatar-size($avatar-size-m);
}

.avatar-size-l {
  @include avatar-size($avatar-size-l);
}

.initials {
  text-align: center;
  text-transform: uppercase;
  display: inline-block;
  vertical-align: middle;
  color: colors.$kobo-white;
  // actual background color is provided by JS, this is just safeguard
  background-color: colors.$kobo-storm;
}

.text {
  flex: 1;
  display: inline-flex;
  align-content: center;
  align-items: center;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 0 8px;
  font-size: 14px;
  line-height: 22px;
}

.fullName {
  font-weight: 600;
  color: colors.$kobo-gray-800;
}

// If `fullName` is being displayed, we want the username to be less prominent
.text.hasFullName .username {
  font-size: 12px;
  line-height: 17px;
  font-weight: 400;
  color: colors.$kobo-gray-700;
}

// If `fullName` is missing, we want the username to be more visible
.text:not(.hasFullName) .username {
  font-weight: 600;
  color: colors.$kobo-gray-800;
}

.email {
  font-weight: 400;
  color: colors.$kobo-gray-700;
  // Force email to always wrap to new line:
  flex-basis: 100%;
  width: 0;
}
