import type { BaseProduct } from './baseProduct'
import type { PriceWithProductMetadata } from './priceWithProductMetadata'
import type { PriceWithProductRecurring } from './priceWithProductRecurring'
import type { PriceWithProductTransformQuantity } from './priceWithProductTransformQuantity'
/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * KoboToolbox API
 * Powerful and intuitive data collection tools to make an impact
 * OpenAPI spec version: 2.0.0 (api_v2)
 */
import type { StripePriceType } from './stripePriceType'

export interface PriceWithProduct {
  /** @maxLength 255 */
  id: string
  /**
   * A brief description of the plan, hidden from customers.
   * @maxLength 250
   */
  nickname?: string
  /**
   * Three-letter ISO currency code
   * @maxLength 3
   */
  currency: string
  /** Whether the price is for a one-time purchase or a recurring (subscription) purchase.

* `one_time` - One-time
* `recurring` - Recurring */
  type: StripePriceType
  /**
   * The recurring components of a price such as `interval` and `usage_type`.
   * @nullable
   */
  recurring?: PriceWithProductRecurring
  /**
   * The unit amount in cents to be charged, represented as a whole integer if possible. Null if a sub-cent precision is required.
   * @minimum -9223372036854776000
   * @maximum 9223372036854776000
   * @nullable
   */
  unit_amount?: number | null
  readonly human_readable_price: string
  /**
   * A set of key/value pairs that you can attach to an object. It can be useful for storing additional information about an object in a structured format.
   * @nullable
   */
  metadata?: PriceWithProductMetadata
  /** Whether the price can be used for new purchases. */
  active: boolean
  product: BaseProduct
  /**
   * Apply a transformation to the reported usage or set quantity before computing the amount billed. Cannot be combined with `tiers`.
   * @nullable
   */
  transform_quantity?: PriceWithProductTransformQuantity
}
