import type { PriceMetadata } from './priceMetadata'
import type { PriceRecurring } from './priceRecurring'
import type { PriceTransformQuantity } from './priceTransformQuantity'
/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * KoboToolbox Primary API
 * This page documents all KoboToolbox API endpoints, except for those implementing the OpenRosa protocol, which are [documented separately](/api/openrosa/docs/).

The endpoints are grouped by area of intended use. Each category contains related endpoints, with detailed documentation on usage and configuration. Use this as a reference to quickly find the right endpoint for managing projects, forms, data, permissions, integrations, logs, and organizational resources.

**General note**: All projects (whether deployed or draft), as well as all library content (questions, blocks, templates, and collections) in the user-facing application are represented in the API as "assets".
 * OpenAPI spec version: 2.0.0 (api_v2)
 */
import type { StripePriceType } from './stripePriceType'

export interface Price {
  /** @maxLength 255 */
  id: string
  /**
   * A brief description of the plan, hidden from customers.
   * @maxLength 250
   */
  nickname?: string
  /**
   * Three-letter ISO currency code
   * @maxLength 3
   */
  currency: string
  /** Whether the price is for a one-time purchase or a recurring (subscription) purchase.

* `one_time` - One-time
* `recurring` - Recurring */
  type: StripePriceType
  /** @nullable */
  recurring: PriceRecurring
  /**
   * The unit amount in cents to be charged, represented as a whole integer if possible. Null if a sub-cent precision is required.
   * @minimum -9223372036854776000
   * @maximum 9223372036854776000
   * @nullable
   */
  unit_amount?: number | null
  readonly human_readable_price: string
  /**
   * A set of key/value pairs that you can attach to an object. It can be useful for storing additional information about an object in a structured format.
   * @nullable
   */
  metadata?: PriceMetadata
  /** Whether the price can be used for new purchases. */
  active: boolean
  /** The product this price is associated with. */
  product: string
  /**
   * Apply a transformation to the reported usage or set quantity before computing the amount billed. Cannot be combined with `tiers`.
   * @nullable
   */
  transform_quantity?: PriceTransformQuantity
}
