name: 'CD: stabilize'


on:
  create:
  push:
    branches: [ 'release/**' ]


jobs:


  changes:
    if: ${{ startsWith(github.ref, 'refs/heads/release/') }}
    runs-on: ubuntu-24.04
    permissions: { pull-requests: read }
    steps:
      - uses: actions/checkout@v4
      - id:   filter
        uses: dorny/paths-filter@v3
        name: Detect changed files
        with: { filters: .github/filters.yml }
    outputs:
      all:      ${{ steps.filter.outputs.all      }}
      darker:   ${{ steps.filter.outputs.darker   }}
      biome:    ${{ steps.filter.outputs.biome    }}
      pytest:   ${{ steps.filter.outputs.pytest   }}
      npm-test: ${{ steps.filter.outputs.npm-test }}


  darker:
    needs: changes
    if: needs.changes.outputs.all == 'true' || needs.changes.outputs.darker == 'true'
    uses: ./.github/workflows/darker.yml


  biome:
    needs: changes
    if: needs.changes.outputs.all == 'true' || needs.changes.outputs.biome == 'true'
    uses: ./.github/workflows/biome.yml


  pytest:
    needs: changes
    if: needs.changes.outputs.all == 'true' || needs.changes.outputs.pytest == 'true'
    uses: ./.github/workflows/pytest.yml


  npm-test:
    needs: changes
    if: needs.changes.outputs.all == 'true' || needs.changes.outputs.npm-test == 'true'
    uses: ./.github/workflows/npm-test.yml


  version:
    needs:
      - changes
      - darker
      - biome
      - pytest
      - npm-test
    if: ${{ !cancelled() && !failure() && needs.changes.result == 'success' }}
    secrets: inherit
    uses: './.github/workflows/find-releases.yml'


  changelog:
    needs:
      - version
    if: ${{ !cancelled() && !failure() && needs.version.result == 'success' }}
    runs-on: ubuntu-24.04
    steps:
    - name: post to Zulip Linear updated draft of changelog
      run: |
        echo 'TODO, for now generate changelog manually'
        echo 'TODO, for now send to Zulip manually'


  deploy-to-beta:
    needs:
      - version
    if: ${{ !cancelled() && !failure() && needs.version.result == 'success' }}
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: deploy to beta
      run: |
        set -xe
        git checkout -B public-beta
        git push -f --set-upstream origin public-beta


  merge-forward:
    name: Merge forward
    needs:
      - version
    if: ${{ !cancelled() && !failure() && needs.version.result == 'success' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Generate a token to trigger a workflow from a workflow
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.KOBO_BOT_APP_ID }}
          private-key: ${{ secrets.KOBO_BOT_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: "0"

      # https://github.com/actions/create-github-app-token?tab=readme-ov-file#configure-git-cli-for-an-apps-bot-user
      - name: Get GitHub App user id
        id: get-user-id
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
      - name: Set git name and email for the bot
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'

      - name: Merge
        env:
          current_branch: ${{ needs.version.outputs.current_branch }}
          next_branch: ${{ needs.version.outputs.next_branch }}
        run: |
          git checkout "$next_branch"
          echo 'TODO: squash migrations, if any'
          git merge --no-ff "$current_branch"
          git push


  notify:
    needs:
      - version
      - changelog
      - deploy-to-beta
      - merge-forward
    if: ${{ !cancelled() && !failure() && needs.version.result == 'success' }}
    uses: './.github/workflows/zulip.yml'
    secrets: inherit
    with:
      topic: "${{ needs.version.outputs.current_minor }} release"
      content: ":working_on_it: Release branch updated, passed CI, deployed to beta, and merged forward. Please update release notes (TODO: automate)"


  on-failure:
    needs:
      - version
      - darker
      - biome
      - pytest
      - npm-test
      - changelog
      - deploy-to-beta
      - merge-forward
    if: ${{ !cancelled() && failure() }}
    secrets: inherit
    uses: './.github/workflows/zulip.yml'
    with:
      topic: "${{ needs.version.outputs.current_minor }} release"
      content: ":warning: @*devs*, [run #${{github.run_number}}](${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}) failed on `${{ github.head_ref || github.ref_name }}` at [\"$COMMIT_TITLE\"](${{ github.event.compare }})"
