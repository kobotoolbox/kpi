name: 'CD: create Github releases'


on: workflow_dispatch


jobs:


  changelog:
    runs-on: ubuntu-24.04
    steps:
    - name: generate changelog for github releases
      run: |
        echo 'TODO, for now generate changelog manually'

  kpi:
    runs-on: ubuntu-22.04
    needs:
      - changelog
    steps:
    - name: make a Github release for kpi
      run: |
        echo 'TODO, for now release it manually'


  kobo-docker:
    runs-on: ubuntu-22.04
    needs:
      - changelog
    steps:
    - name: make a Github release for kobo-docker
      run: |
        echo 'TODO, for now release it manually'


  kobo-install:
    runs-on: ubuntu-22.04
    needs:
      - changelog
    steps:
    - name: make a Github release for kobo-install
      run: |
        echo 'TODO, for now release it manually'


  forums:
    runs-on: ubuntu-22.04
    needs:
      - kpi
      - kobo-docker
      - kobo-install
    steps:
    - name: undraft releases changelog on forums
      run: |
        echo 'TODO, for now do it manually'


  notify:
    runs-on: ubuntu-24.04
    steps:
    - name: notify on Zulip
      run: |
        echo 'TODO, for now do it manually'


  on-failure:
    runs-on: ubuntu-22.04
    needs:
      - changelog
      - kpi
      - kobo-docker
      - kobo-install
      - forums
    if: |
      failure() &&
      (needs.changelog.result == 'failure' || needs.changelog.result == 'timed_out' ||
      needs.kpi.result == 'failure' || needs.kpi.result == 'timed_out' ||
      needs.kobo-docker.result == 'failure' || needs.kobo-docker.result == 'timed_out' ||
      needs.kobo-install.result == 'failure' || needs.kobo-install.result == 'timed_out' ||
      needs.forums.result == 'failure' || needs.forums.result == 'timed_out')
    steps:

    - name: Send a stream message
      uses: zulip/github-actions-zulip/send-message@v1
      with:
        api-key: ${{ secrets.ZULIP_API_KEY_GITHUB_ACTIONS_BOT }}
        email: "github-actions-bot@chat.kobotoolbox.org"
        organization-url: "https://chat.kobotoolbox.org"
        type: "stream"
        to: "Kobo Dev"
        topic: "Github Actions (${{ github.event.inputs.prod_env }})"
        content: ":warning: ${{ github.event.inputs.tag }} failed to create a Github release(s), see [run #${{github.run_number}}](${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}})."
