name: Daily Chromatic test

# on:
#   schedule:
#     - cron: "0 0 * * *"

on: pull_request

jobs:
  check-date:
    name: Check latest commit
    runs-on: ubuntu-22.04
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v2
      - name: print latest_commit
        run: echo ${{ github.sha }}

      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"

  chromatic:
    name: Run Chromatic test
    runs-on: ubuntu-22.04
    needs: check-date
    if: ${{ needs.check-date.outputs.should_run != 'false' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20.17.0
      - name: Install dependencies
        run: npm ci
      - name: Run Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          # Enable TurboSnapâ„¢
          onlyChanged: true
          # Builds that contain visual changes need to be verified. The task
          # will fail if there are any. Once you accept all the changes (on the
          # chromatic website), re-run the workflow, and the chromatic job will
          # pass.
          exitZeroOnChanges: false
          buildScriptName: build:storybook

  on-failure:
    runs-on: ubuntu-22.04
    needs: chromatic
    # Any code that isn't 0 means some error happening, see https://www.chromatic.com/docs/cli/#exit-codes
    if: ${{ always() && (needs.chromatic.output.code != 0) }}
    steps:
    - name: Split commit message title
      id: title
      env:
        MESSAGE: ${{ github.event.commits[0].message }}
      run: echo "fragment=`echo "${MESSAGE}" | head -1`" >> $GITHUB_OUTPUT

    - name: Send a stream message
      uses: zulip/github-actions-zulip/send-message@v1
      with:
        api-key: ${{ secrets.ZULIP_API_KEY_GITHUB_ACTIONS_BOT }}
        email: "github-actions-bot@chat.kobotoolbox.org"
        organization-url: "https://chat.kobotoolbox.org"
        type: "stream"
        to: "Kobo Dev"
        topic: "Github Actions (chromatic)"
        content: ":boom: @*frontend*, [run #${{github.run_number}}](${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}) failed on `main` at [${{ toJson(steps.title.outputs.fragment) }}](${{ github.event.compare }}). View Chromatic build details at ${{needs.chromatic.output.buildUrl}}. If you accept all the changes, please re-run the failed job."
