# Generated by Django 3.2.15 on 2023-11-02 15:30
from itertools import islice

from django.conf import settings
from django.db import migrations
from django.db.utils import ProgrammingError

from kobo.apps.openrosa.apps.main.models import UserProfile
from kpi.constants import PERM_ADD_SUBMISSIONS, SKIP_HEAVY_MIGRATIONS_GUIDANCE


CHUNK_SIZE = 2000


def assign_add_submissions_to_anonymous_users(apps, schema_editor):
    if settings.SKIP_HEAVY_MIGRATIONS or settings.TESTING:
        return

    print(SKIP_HEAVY_MIGRATIONS_GUIDANCE)

    Asset = apps.get_model('kpi', 'Asset')  # noqa
    ObjectPermission = apps.get_model('kpi', 'ObjectPermission')  # noqa
    Permission = apps.get_model('auth', 'Permission')  # noqa
    permission_id = Permission.objects.get(codename=PERM_ADD_SUBMISSIONS).pk

    try:
        UserProfile.objects.first()
    except ProgrammingError as e:
        # Race condition when KoboCAT migrations have not run yet
        if 'relation "main_userprofile" does not exist' in str(e):
            return

    owner_iter = (
        UserProfile.objects.filter(require_auth=False)
        .values_list('user_id', flat=True)
        .iterator(chunk_size=CHUNK_SIZE)
    )

    while True:
        owner_ids = list(islice(owner_iter, CHUNK_SIZE))
        if not owner_ids:
            break
        ObjectPermission.objects.bulk_create(
            [
                ObjectPermission(
                    permission_id=permission_id,
                    user_id=settings.ANONYMOUS_USER_ID,
                    asset_id=asset_id,
                    deny=False,
                    inherited=False,
                )
                for asset_id in Asset.objects.filter(
                    owner_id__in=owner_ids
                ).values_list('pk', flat=True)
            ],
            ignore_conflicts=True,
        )


def remove_add_submissions_from_anonymous_users(apps, schema_editor):
    if settings.SKIP_HEAVY_MIGRATIONS:
        return

    print(SKIP_HEAVY_MIGRATIONS_GUIDANCE)

    Asset = apps.get_model('kpi', 'Asset')  # noqa
    ObjectPermission = apps.get_model('kpi', 'ObjectPermission')  # noqa
    Permission = apps.get_model('auth', 'Permission')  # noqa
    permission_id = Permission.objects.get(codename=PERM_ADD_SUBMISSIONS).pk

    ObjectPermission.objects.filter(
        deny=False,
        inherited=False,
        permission_id=permission_id,
        user_id=settings.ANONYMOUS_USER_ID,
    ).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('kpi', '0054_set_deployment_data__stored_data_key_to_null'),
    ]

    operations = [
        migrations.RunPython(
            assign_add_submissions_to_anonymous_users,
            remove_add_submissions_from_anonymous_users,
        ),
    ]
