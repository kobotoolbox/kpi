openapi: 3.0.3
info:
  title: KoboToolbox API
  version: 2.0.0 (api_v2)
  description: Powerful and intuitive data collection tools to make an impact
paths:
  /api/v2/access-logs/:
    get:
      operationId: api_v2_access_logs_list
      description: |
        ## List all access logs for all users

        ⚠️ _Only available to superusers_

        Submissions will be grouped together by user by hour

        **Filterable fields:**

        - date_created
        - user_uid
        - user__username
        - metadata__source
        - metadata__auth_type
        - metadata__ip_address

        **Some examples:**

        1. All logs from a specific IP address
            `api/v2/access-logs/?q=metadata__ip_address:"127.0.0.1"`

        2. All logs created after Jan 1, 2025
            `api/v2/access-logs/?q=date_created__gte:"2025-01-01"`

        *Notes: Do not forget to wrap search terms in double-quotes if they contain spaces
        (e.g. date and time "2022-11-15 20:34")*
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: q
        schema:
          type: string
      tags:
      - Access Logs
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccessLogResponseList'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
  /api/v2/access-logs/export/:
    get:
      operationId: api_v2_access_logs_export_list
      description: |
        ## List all access logs export tasks for all users

        ⚠️ _Only available to superusers_
      tags:
      - Access Logs
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExportListResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
    post:
      operationId: api_v2_access_logs_export_create
      description: |
        ## Create an export task for all users

        ⚠️ _Only available to superusers_
      tags:
      - Access Logs
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportCreateResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
  /api/v2/access-logs/me/:
    get:
      operationId: api_v2_access_logs_me_list
      description: |
        ## List all access logs for the authenticated user

        Submissions will be grouped together by hour

        Results from this endpoint can be filtered by a boolean query specified in the `q` parameter.

        **Filterable fields:**

        * date_created
        * metadata__source
        * metadata__auth_type
        * metadata__ip_address

        **Some examples:**

        * All logs from a specific IP address
            `api/v2/access-logs/?q=metadata__ip_address:"127.0.0.1"`
        * All logs created after Jan, 1 2025
            `api/v2/access-logs/?q=date_created__date__gte:"2025-01-01"`

        *Notes: Do not forget to wrap search terms in double-quotes if they contain spaces
        (e.g. date and time "2022-11-15 20:34")*
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: q
        schema:
          type: string
      tags:
      - Access Logs
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccessLogResponseList'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
  /api/v2/access-logs/me/export/:
    get:
      operationId: api_v2_access_logs_me_export_list
      description: |
        ## List all access logs export tasks for the authenticated user
      tags:
      - Access Logs
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExportListResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
    post:
      operationId: api_v2_access_logs_me_export_create
      description: |
        ## Create an export task for the authenticated user
      tags:
      - Access Logs
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportCreateResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
  /api/v2/asset_snapshots/:
    get:
      operationId: api_v2_asset_snapshots_list
      description: |
        ## List all snapshots for every asset of a user
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Asset Snapshots
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetSnapshotResponseList'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
    post:
      operationId: api_v2_asset_snapshots_create
      description: |
        ## Create an asset snapshot

        When creating an asset snapshot, you must provide either:

        - the asset (as a URI), or
        - the source (as a JSON object representing the asset)

        …but not both.
      tags:
      - Asset Snapshots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetSnapshotCreateRequest'
            examples:
              UsingAsset:
                value:
                  asset: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
                  details:
                    status: string
                    warnings:
                    - code: string
                      message: string
                summary: Using asset
              UsingSource:
                value:
                  source:
                    schema: string
                    survey:
                    - name: string
                      type: string
                    settings:
                      form_title: string
                    translated:
                    - string
                    translation:
                    - string
                  details:
                    status: string
                    warnings:
                    - code: string
                      message: string
                summary: Using source
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetSnapshotResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/asset_snapshots/{uid}/:
    get:
      operationId: api_v2_asset_snapshots_retrieve
      description: |
        ## Retrieve an asset snapshot

        Note: If the `Content-Type` of the request is set to `application/xml`, the response will
        return the XML version of the form, rather than the JSON representation of the asset
        snapshot.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - xml
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Asset Snapshots
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetSnapshotResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AssetSnapshotResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    delete:
      operationId: api_v2_asset_snapshots_destroy
      description: |
        ## Delete an asset snapshot
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Asset Snapshots
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/asset_snapshots/{uid}/preview/:
    get:
      operationId: api_v2_asset_snapshots_preview_retrieve
      description: |
        ## Asset snapshot preview

        Returns a `302 Found` redirect to the Enketo preview page associated with the asset.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Asset Snapshots
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '302':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/asset_snapshots/{uid}/xform/:
    get:
      operationId: api_v2_asset_snapshots_xform_retrieve
      description: |
        ## This route will render the XForm into syntax-highlighted HTML.

        It is useful for debugging pyxform transformations
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Asset Snapshots
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OpenRosaXFormResponse'
          description: null
        '404':
          description: No response body
  /api/v2/asset_snapshots/{uid}/xml_with_disclaimer/:
    get:
      operationId: api_v2_asset_snapshots_xml_with_disclaimer_retrieve
      description: |
        ## Implement part of the OpenRosa Form List API

        This endpoint is used by Enketo to fetch and return the full XML form.
        It behaves like the standard retrieve endpoint but includes an additional `<note>`
        node containing the disclaimer, if one exists.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Asset Snapshots
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OpenRosaXFormResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/asset_subscriptions/:
    get:
      operationId: api_v2_asset_subscriptions_list
      description: |
        ## List all asset subscriptions of a user
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Asset Subscriptions
      security:
      - BasicAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetSubscriptionResponseList'
          description: null
    post:
      operationId: api_v2_asset_subscriptions_create
      description: |
        ## Create an asset subscription

        Create a subscription to a public collection for the user.
      tags:
      - Asset Subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetSubscriptionRequest'
        required: true
      security:
      - BasicAuth: []
      - TokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetSubscriptionResponse'
          description: null
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/asset_subscriptions/{uid}/:
    get:
      operationId: api_v2_asset_subscriptions_retrieve
      description: |
        ## Retrieve an asset subscription
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Asset Subscriptions
      security:
      - BasicAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetSubscriptionResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    delete:
      operationId: api_v2_asset_subscriptions_destroy
      description: |
        ## Delete a subscription to an asset

        Unsubscribe from a public asset.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Asset Subscriptions
      security:
      - BasicAuth: []
      - TokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/asset_usage/:
    get:
      operationId: api_v2_asset_usage_list
      description: |
        ## Get user's asset usage
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Asset Usage
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetUsageResponseList'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
  /api/v2/assets/:
    get:
      operationId: api_v2_assets_list
      description: |
        ## Get user's assets


        Search can be made with `q` parameter.
        Search filters can be returned with results by passing `metadata=on` to querystring.


        Results can be sorted with `ordering` parameter, e.g.:

        ```shell
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/?ordering=-name
        ```


        Allowed fields are:

        - `asset_type`
        - `date_modified`
        - `date_deployed`
        - `date_modified__date`
        - `date_deployed__date`
        - `name`
        - `settings__sector`
        - `settings__sector__value`
        - `settings__description`
        - `owner__username`
        - `owner__extra_details__data__name`
        - `owner__extra_details__data__organization`
        - `owner__email`
        - `_deployment_status`
        - `subscribers_count`


        Note: Collections can be displayed first with parameter `collections_first`, e.g.:

        ```shell
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/?collections_first=true&ordering=-name
        ```
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - Assets
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetList'
          description: null
    post:
      operationId: api_v2_assets_create
      description: |
        ## Create or clone an asset

        When cloning an asset, you must provide:

        - the name (as a string),
        - the `clone_from` (the uid representing the asset),
        - the asset_type

        Where `asset_type` must be one of these values:

        * block (can be cloned to `block`, `question`, `survey`, `template`)
        * question (can be cloned to `question`, `survey`, `template`)
        * survey (can be cloned to `block`, `question`, `survey`, `template`)
        * template (can be cloned to `survey`, `template`)

        Settings are cloned only when type of assets are `survey` or `template`.
        In that case, `share-metadata` is not preserved.

        When creating a new `block` or `question` asset, settings are not saved either.
      tags:
      - Assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetCreateRequest'
            examples:
              CreatingAnAsset:
                value:
                  name: string
                  settings:
                    description: string
                    sector: string
                    country: string
                    share-metadata: true
                  asset_type: string
                summary: Creating an asset
              CloningAnAsset:
                value:
                  name: string
                  clone_from: string
                  asset_type: string
                summary: Cloning an asset
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/assets/{parent_lookup_asset}/attachments/{id}/:
    delete:
      operationId: api_v2_assets_attachments_destroy
      description: |
        ## Delete a specific attachment of an Asset

        * `id` can only be the uid of attachment to be deleted
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the attachment
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Attachments
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/assets/{parent_lookup_asset}/attachments/bulk/:
    delete:
      operationId: api_v2_assets_attachments_bulk_destroy
      description: |
        ## Delete all attachments from a list of submissions

        ```curl
          curl -X DELETE https://kf.kobotoolbox.org/api/v2/assets/aSAvYreNzVEkrWg5Gdcvg/attachments/bulk/
        ```

        > **Payload**
        >
        >        {
        >           "submission_root_uuids": [
        >               "3ed2e8de-b493-4367-a78d-3463687239dc",
        >               "ef18fe33-c71d-4638-84d6-dafcbd69c327"
        >           ]
        >        }

        * Where: "submission_root_uuids" (required) is a list of submission root uuids on the asset
        to delete


        > **Response**
        >
        >        {
        >           "message": "{number_of_attachment} attachments deleted"
        >        }

        * Where: "number_of_attachment" is the number of items that was deleted


        ### !! Due to current DRF-Spectacular limitations with AOS 3.1, DELETE operations do not display request or response bodies in this documentation (as payloads are not typically recommended for DELETE). This means direct testing is unavailable. However, example payloads and responses are provided for reference, and HTTP codes/error messages are accurate.  !!
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Attachments
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '202':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/assets/{parent_lookup_asset}/counts/:
    get:
      operationId: api_v2_assets_counts_list
      description: |
        ## Count the daily amount of submission

        Returns up to the last 31 days of daily counts and total counts of submissions to a survey.


        Use the `days` query to get the daily counts from the last x amount of days.
        Default amount is 30 days


        ```shell
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/aSAvYreNzVEkrWg5Gdcvg/counts/?days=7
        ```
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Assets
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetCountResponseList'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/data/:
    get:
      operationId: api_v2_assets_data_list
      description: |+
        ## List of submissions for a specific asset

        By default, JSON format is used, but XML and GeoJSON are also available:

        ```shell
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/{uid}/data/
        ```

        ### Pagination
        Two parameters can be used to control pagination.

        * `start`: Index (zero-based) from which the results start
        * `limit`: Number of results per page <span class='label label-warning'>Maximum results per page is **30000**</span>

        ```shell
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/{uid}/data/?start=0&limit=10
        ```

        ### Query submitted data
        Provides a list of submitted data for a specific form. Use `query`
        parameter to apply form data specific, see
        <a href="http://docs.mongodb.org/manual/reference/operator/query/">http://docs.mongodb.org/manual/reference/operator/query/</a>.

        For more details see
        <a href="https://github.com/SEL-Columbia/formhub/wiki/Formhub-Access-Points-(API)#api-parameters">API Parameters</a>.

        ```shell
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/{uid}/data/?query={"__version__": "vWvkKzNE8xCtfApJvabfjG"}
        curl https://kf.kobotoolbox.org/api/v2/assets/{uid}/data/?query={"_submission_time": {"$gt": "2019-09-01T01:02:03"}}
        ```

        ### About the GeoJSON format
        Requesting the `geojson` format returns a `FeatureCollection` where each
        submission is a `Feature`. If your form has multiple geographic questions,
        use the `geo_question_name` query parameter to determine which question's
        responses populate the `geometry` for each `Feature`; otherwise, the first
        geographic question is used.  All question/response pairs are included in
        the `properties` of each `Feature`, but _repeating groups are omitted_.

        Question types are mapped to GeoJSON geometry types as follows:

        * `geopoint` to `Point`;
        * `geotrace` to `LineString`;
        * `geoshape` to `Polygon`.



        ### ⚠️ Note: DRF-Spectacular Limitation

        Due to limitations in **DRF-Spectacular**, the `ACCEPT` headers do not sync properly with the request. As a result, all responses will default to `application/json`, regardless of the specified format.

        This means that while alternative formats (like XML) are technically supported and will work via command-line tools (e.g., `curl`), **they will not work** when trying out the endpoint directly from the documentation page.

        We’ve still included the header to show supported formats, but keep in mind:
        **Only `application/json` will be used in the docs UI.**

      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - geojson
          - json
          - xml
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - name: start
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDataResponseList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedDataResponseList'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/data/{parent_lookup_data}/attachments/:
    get:
      operationId: api_v2_assets_data_attachments_list
      description: |
        ## Get an asset's attachment using xpath

        * `parent_lookup_data` can be the primary key of the submission or its `uuid`.
        Please note that using the `uuid` may match **several** submissions, only
        the first match will be returned.

        Use the `xpath` property to retrieve an attachment.

        ```curl
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/aSAvYreNzVEkrWg5Gdcvg/data/451/attachment/?xpath=Upload_a_file
        ```

        ### Get an MP3 file from an audio or video file
        Convert audio and video files. Only conversions to MP3 is supported for this feature

        ```curl
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/aSAvYreNzVEkrWg5Gdcvg/data/451/attachment/?xpath=Upload_a_file&format=mp3
        ```
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - mp3
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: parent_lookup_data
        schema:
          type: string
        description: UID of the parent data
        required: true
      - in: query
        name: xpath
        schema:
          type: string
        required: true
      tags:
      - Attachments
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: Will return a content type with the type of the attachment
            as well as the attachment itself.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/assets/{parent_lookup_asset}/data/{parent_lookup_data}/attachments/{id}/:
    get:
      operationId: attachment_retrieve
      description: |
        ## Get an asset's attachment using the ID

        * `parent_lookup_data` can be the primary key of the submission or its `uuid`.
        Please note that using the `uuid` may match **several** submissions, only
        the first match will be returned.

        * `id` of attachment can be the primary key of the attachment or its `uid`.

        Both examples works:
        ```curl
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/aSAvYreNzVEkrWg5Gdcvg/data/451/attachment/1/
        ```
        Or, using the `UID`:
        ```curl
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/aSAvYreNzVEkrWg5Gdcvg/data/451/attachment/attwYwGxdtQPSqgmHk6wS6E6/
        ```

        ### Get an MP3 file from an audio or video file
        Convert audio and video files. Only conversions to MP3 is supported for this feature

        ```curl
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/aSAvYreNzVEkrWg5Gdcvg/data/451/attachment/1/?format=mp3
        ```
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - mp3
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the attachment
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: parent_lookup_data
        schema:
          type: string
        description: UID of the parent data
        required: true
      tags:
      - Attachments
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: Will return a content type with the type of the attachment
            as well as the attachment itself.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/assets/{parent_lookup_asset}/data/{parent_lookup_data}/attachments/{id}/{suffix}/:
    get:
      operationId: attachment_thumbnail
      description: |
        ## Get a specific size of the user's attachment (Only for images)

        Available formats:
        - `small`
        - `medium`
        - `large`

        `id` of attachment can be the primary key of the attachment or its `uid`.

        Both examples works:
        ```curl
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/aSAvYreNzVEkrWg5Gdcvg/data/451/attachment/1/small/
        ```
        Or, using the `UID`:
        ```curl
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/aSAvYreNzVEkrWg5Gdcvg/data/451/attachment/attwYwGxdtQPSqgmHk6wS6E6/medium/
        ```
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the attachment
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: parent_lookup_data
        schema:
          type: string
        description: UID of the parent data
        required: true
      - in: path
        name: suffix
        schema:
          type: string
          pattern: ^(original|large|medium|small)$
        required: true
      tags:
      - Attachments
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: Will return a content type with the type of the attachment
            as well as the attachment itself in the demanded format.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/data/{id}/:
    get:
      operationId: api_v2_assets_data_retrieve
      description: |
        ## Get a specific submission
        It is also possible to specify the format.

        `id` can be the primary key of the submission or its `uuid`.
        Please note that using the `uuid` may match **several** submissions, only
        the first match will be returned.

        ```shell
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/{uid}/data/{id}.xml
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/{uid}/data/{id}.json
        ```

        or

        ```shell
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/{uid}/data/{id}/?format=xml
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/{uid}/data/{id}/?format=json
        ```


        ### ⚠️ Note: DRF-Spectacular Limitation

        Due to limitations in **DRF-Spectacular**, the `ACCEPT` headers do not sync properly with the request. As a result, all responses will default to `application/json`, regardless of the specified format.

        This means that while alternative formats (like XML) are technically supported and will work via command-line tools (e.g., `curl`), **they will not work** when trying out the endpoint directly from the documentation page.

        We’ve still included the header to show supported formats, but keep in mind:
        **Only `application/json` will be used in the docs UI.**
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - geojson
          - json
          - xml
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the data
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DataResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    delete:
      operationId: api_v2_assets_data_destroy
      description: |
        ## Deletes current submission
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the data
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/data/{id}/duplicate/:
    post:
      operationId: api_v2_assets_data_duplicate_create
      description: |
        ## Duplicate submission
        Duplicates the data of a submission
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the data
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataBulkDelete'
        required: true
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/data/{id}/edit/:
    get:
      operationId: api_v2_assets_data_edit_retrieve
      description: |
        ## Get submission url of enketo in edit mode

        Note: Some variation of this url exists:

        `/api/v2/assets/{parent_lookup_asset}/data/{id}/edit/`: deprecated, use the next one.

        `/api/v2/assets/{parent_lookup_asset}/data/{id}/enketo/edit/`: return the url of the enketo submission (as seen in the response example).

        `/api/v2/assets/{parent_lookup_asset}/data/{id}/enketo/redirect/edit/`: redirect to the enketo url submission with a 302 HTTP code.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the data
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnketoEditResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/data/{id}/enketo/edit/:
    get:
      operationId: api_v2_assets_data_enketo_edit_retrieve
      description: |
        ## Get submission url of enketo in edit mode

        Note: Some variation of this url exists:

        `/api/v2/assets/{parent_lookup_asset}/data/{id}/edit/`: deprecated, use the next one.

        `/api/v2/assets/{parent_lookup_asset}/data/{id}/enketo/edit/`: return the url of the enketo submission (as seen in the response example).

        `/api/v2/assets/{parent_lookup_asset}/data/{id}/enketo/redirect/edit/`: redirect to the enketo url submission with a 302 HTTP code.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the data
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnketoEditResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/data/{id}/enketo/redirect/edit/:
    get:
      operationId: api_v2_assets_data_enketo_redirect_edit_retrieve
      description: |
        ## Get submission url of enketo in edit mode

        Note: Some variation of this url exists:

        `/api/v2/assets/{parent_lookup_asset}/data/{id}/edit/`: deprecated, use the next one.

        `/api/v2/assets/{parent_lookup_asset}/data/{id}/enketo/edit/`: return the url of the enketo submission (as seen in the response example).

        `/api/v2/assets/{parent_lookup_asset}/data/{id}/enketo/redirect/edit/`: redirect to the enketo url submission with a 302 HTTP code.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the data
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnketoEditResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/data/{id}/enketo/redirect/view/:
    get:
      operationId: api_v2_assets_data_enketo_redirect_view_retrieve
      description: |
        ## Get submission url of enketo in preview mode

        Note: Some variation of this url exists:

        `/api/v2/assets/{parent_lookup_asset}/data/{id}/enketo/view/`: return the url of the enketo submission (as seen in the response example).

        `/api/v2/assets/{parent_lookup_asset}/data/{id}/enketo/redirect/view/`: redirect to the enketo url submission with a 302 code.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the data
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnketoViewResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/data/{id}/enketo/view/:
    get:
      operationId: api_v2_assets_data_enketo_view_retrieve
      description: |
        ## Get submission url of enketo in preview mode

        Note: Some variation of this url exists:

        `/api/v2/assets/{parent_lookup_asset}/data/{id}/enketo/view/`: return the url of the enketo submission (as seen in the response example).

        `/api/v2/assets/{parent_lookup_asset}/data/{id}/enketo/redirect/view/`: redirect to the enketo url submission with a 302 code.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the data
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnketoViewResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/data/{id}/validation_status/:
    get:
      operationId: api_v2_assets_data_validation_status_retrieve
      description: |
        ## Get validation statuses
        Retrieves the validation status of a submission.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the data
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataValidationStatusUpdateResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    patch:
      operationId: api_v2_assets_data_validation_status_partial_update
      description: |
        ## Update the validation of a submission

        The validation status of the submission can be updated. The `validation_status.uid` should be a `string`, and it must be one of the following values:

        - `validation_status_approved`
        - `validation_status_not_approved`
        - `validation_status_on_hold`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the data
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataValidationStatusUpdatePayload'
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataValidationStatusUpdateResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    delete:
      operationId: api_v2_assets_data_validation_status_destroy
      description: |
        ## Delete validation status
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the data
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/data/bulk/:
    patch:
      operationId: api_v2_assets_data_bulk_partial_update
      description: |
        ## Bulk updating of submissions

        Where `<field_to_update_n>` is a string and should be an existing XML field value of the submissions.
        If `<field_to_update_n>` is part of a group or nested group, the field must follow the group hierarchy
        structure, i.e.:

        If the field is within a group called `group_1`, the field name is `question_1` and the new value is `new value`,
        the payload should contain an item with the following structure:

        *"group_1/question_1": "new value"*


        Similarly, if there are `N` nested groups, the structure will be:

        *"group_1/sub_group_1/.../sub_group_n/question_1": "new value"*
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataBulkUpdate'
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBulkUpdateResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    delete:
      operationId: api_v2_assets_data_bulk_destroy
      description: |
        ## Bulk delete submissions

        ```curl
          curl -X DELETE https://kf.kobotoolbox.org/api/v2/assets/aSAvYreNzVEkrWg5Gdcvg/data/bulk/
        ```

        **Payload**
        ```json
        {
                   "submissions_ids": [
                       1,
                       2
                   ]
                }
        ```
        * Where: `submissions_ids` (required) is a list of submission root id on the data
        to delete


        **Response**
        ```json
        {
                   "detail": "{number_of_submissions} submissions have been deleted"
        }
        ```
        * Where: `number_of_submissions` is the number of items that was deleted


        ### !! Due to limitations with DRF-Spectacular current version not fully supporting AOS 3.1, DELETE actions do not support showing a request body OR a response body. This is due to the 'vague' nature of the action which generally does *not* recommend the use of a payload. To still document this endpoint, example for the payload and response will be included but it will not be possible to test this endpoint. The HTTP code and the errors example are, for their part, factual and can be considered when working with the endpoint. !!
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/data/validation_statuses/:
    patch:
      operationId: api_v2_assets_data_validation_statuses_partial_update
      description: |
        ## Bulk update submissions status

        * Where: "submissions_ids" (required) is a list of submission root id on the data
        to delete
        * Where: "validation_status.uid" (required)  is a string and can be one of these values:
          * `validation_status_approved`
          * `validation_status_not_approved`
          * `validation_status_on_hold`

        Will return the number of submission updated as such:
        > **Response**
        >
        >        {
        >           "detail": "{number_of_submissions} submissions have been updated"
        >        }
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataValidationStatusesUpdatePayload'
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStatusesUpdate'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    delete:
      operationId: api_v2_assets_data_validation_statuses_destroy
      description: |
        ## Bulk delete submissions status

        ```curl
          curl -X DELETE https://kf.kobotoolbox.org/api/v2/assets/aSAvYreNzVEkrWg5Gdcvg/data/validation_statuses/
        ```

        **Payload**
        ```json
        {
          "payload": {
            "submission_ids": [
                1,
                2
              ],
            "validation_status.uid": "validation_status"
          }
        }
        ```
        * Where: "submissions_ids" (required) is a list of submission root id on the data
        to delete

        The validation status of the submission can be updated. The `validation_status.uid` should be a `string`, and it must be one of the following values:
        - `validation_status_approved`
        - `validation_status_not_approved`
        - `validation_status_on_hold`

        **Response**
        ```json
        {
                   "detail": "{number_of_submissions} submissions have been updated"
        }
        ```

        ### !! Due to limitations with DRF-Spectacular current version not fully supporting AOS 3.1, DELETE actions do not support showing a request body OR a response body. This is due to the 'vague' nature of the action which generally does *not* recommend the use of a payload. To still document this endpoint, example for the payload and response will be included but it will not be possible to test this endpoint. The HTTP code and the errors example are, for their part, factual and can be considered when working with the endpoint. !!
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/export-settings/:
    get:
      operationId: api_v2_assets_export_settings_list
      description: |
        ## List of export settings for a specific asset

        <sup>*</sup> _Required permissions: `view_submissions` (View submissions)_
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Export Settings
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExportSettingResponseList'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    post:
      operationId: api_v2_assets_export_settings_create
      description: |
        ## Create an export setting for an asset

        <sup>*</sup> _Required permissions: `manage_asset` (Manage project)_

        Where:

        * `name` (required) is the name of the export setting displayed in the UI
        * `export_settings` (required) is a map of defined settings containing the following valid options:
            * `fields` (optional) is an array of column names to be included in the export (including their group hierarchy). Valid inputs include:
                * An array containing any string value that matches the XML column name
                * An empty array which will result in all columns being included
                * If `fields` is not included in the `export_settings`, all columns will be included in the export
        * `flatten` (optional) is a boolean value and only relevant when exporting to `geojson` format.
        * `fields_from_all_versions` (required) is a boolean to specify whether fields from all form versions will be included in the export.
        * `group_sep` (required) is a value used to separate the names in a hierarchy of groups. Valid inputs include:
            * Non-empty value
        * `hierarchy_in_labels` (required) is a boolean to specify whether the group hierarchy will be displayed in labels
        * `multiple_select` (required) is a value to specify the display of multiple-select-type responses. Valid inputs include:
            * `both`,
            * `summary`, or
            * `details`
        * `type` (required) specifies the export format. Valid export formats include:
            * `csv`,
            * `geojson`,
            * `spss_labels`, or
            * `xls`
        * `xls_types_as_text` (optional) is a boolean value that defaults to `false` and only affects `xls` export types.
        * `include_media_url` (optional) is a boolean value that defaults to `false` and only affects `xls` and `csv` export types.
        * `submission_ids` (optional) is an array of submission ids that will filter exported submissions to only the specified array of ids. Valid inputs include:
            * An array containing integer values
            * An empty array (no filtering)
        * `query` (optional) is a JSON object containing a Mongo filter query for filtering exported submissions. Valid inputs include:
            * A JSON object containing a valid Mongo query
            * An empty JSON object (no filtering)

        **Note that the following behaviour can be expected when specifying a value for the `multiple_select` field:**

        * `summary`: Includes one column per question, with all selected choices separated by spaces;
        * `details`: Expands each multiple-select question to one column per choice, with each of those columns having a binary 1 or 0 to indicate whether that choice was chosen;
        * `both`: Includes the format of `summary` _and_ `details` in the export
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Export Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportSettingCreatePayload'
        required: true
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportSettingResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/assets/{parent_lookup_asset}/export-settings/{uid}/:
    get:
      operationId: api_v2_assets_export_settings_retrieve
      description: |
        ## Retrieve a specific export setting

        <sup>*</sup> _Required permissions: `view_submissions` (View submissions)_
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: uid
        schema:
          type: string
        description: UID of the export-settings
        required: true
      tags:
      - Export Settings
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportSettingResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    patch:
      operationId: api_v2_assets_export_settings_partial_update
      description: |
        ## Update the current export setting

        <sup>*</sup> _Required permissions: `manage_asset` (Manage project)_
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: uid
        schema:
          type: string
        description: UID of the export-settings
        required: true
      tags:
      - Export Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExportSettingUpdatePayload'
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportSettingResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
    delete:
      operationId: api_v2_assets_export_settings_destroy
      description: |+
        ## Delete current export setting

        <sup>*</sup> _Required permissions: `manage_asset` (Manage project)_

      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: uid
        schema:
          type: string
        description: UID of the export-settings
        required: true
      tags:
      - Export Settings
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/export-settings/{uid}/data/:
    get:
      operationId: api_v2_assets_export_settings_data_retrieve
      description: |
        ## Synchronously export data

        To retrieve data synchronously in CSV and XLSX format according to a
        particular instance of export settings.

        Processing time of synchronous exports is substantially limited compared to
        asynchronous exports, which are available at `/api/v2/assets/{asset_uid}/exports/`.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - xlsx
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: uid
        schema:
          type: string
        description: UID of the export-settings
        required: true
      tags:
      - Export Settings
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: Will return a content type with the type of the attachment
            as well as the attachment itself.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/assets/{parent_lookup_asset}/exports/:
    get:
      operationId: api_v2_assets_exports_list
      description: |
        ## List of export tasks endpoints

        Lists the export tasks accessible to requesting user, for anonymous access
        nothing is returned.

        <sup>*</sup> _Required permissions: `view_submissions` (View submissions)_

        Otherwise, the search can be more specific:

        **Exports matching `uid`s:**
        ```shell
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/{asset_uid}/exports/?q=uid__in:ehZUwRctkhp9QfJgvEWGg OR uid__in:ehZUwRctkhp9QfJgvDnjud
        ```
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Exports
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExportResponseList'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    post:
      operationId: api_v2_assets_exports_create
      description: |
        ## Creates an export task

        Where:
        * `fields_from_all_versions` (required) is a boolean to specify whether fields from all form versions will be included in the export.
            * `group_sep` (required) is a value used to separate the names in a hierarchy of groups. Valid inputs include:
                * Non-empty value
            * `hierarchy_in_labels` (required) is a boolean to specify whether the group hierarchy will be displayed in labels
            * `lang` (required) is a string that can be set to:
                * `_xml` to have XML values and headers, or
                * Any translation specified in the form such as `English (en)`, etc.
            * `multiple_select` (required) is a value to specify the display of `multiple_select-type` responses. Valid inputs include:
                * `both`,
                * `summary`, or
                * `details`
            * "`type`" (required) specifies the export format. Valid export formats include:
                * `csv`,
                * `geojson`,
                * `spss_labels`, or
                * `xls`
            * `fields` (optional) is an array of column names to be included in the export (including their group hierarchy). Valid inputs include:
                * An array containing any string value that matches the XML column name
                * An empty array which will result in all columns being included
                * If `fields` is not included in the `export_settings`, all columns will be included in the export
            * `flatten` (optional) is a boolean value and only relevant when exporting to "geojson" format.
            * `xls_types_as_text` (optional) is a boolean value that defaults to `false` and only affects `xls` export types.
            * `include_media_url` (optional) is a boolean value that defaults to `false` and only affects `xls` and "csv" export types. This will include an additional column for media-type questions (`question_name_URL`) with the URL link to the hosted file.
            * `submission_ids` (optional) is an array of submission ids that will filter exported submissions to only the specified array of ids. Valid inputs include:
                * An array containing integer values
                * An empty array (no filtering)
            * `query` (optional) is a JSON object containing a Mongo filter query for filtering exported submissions. Valid inputs include:
                * A JSON object containing a valid Mongo query
                * An empty JSON object (no filtering)
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Exports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportCreatePayload'
        required: true
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/assets/{parent_lookup_asset}/exports/{uid}/:
    get:
      operationId: api_v2_assets_exports_retrieve
      description: |
        ## Retrieves current export task
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: uid
        schema:
          type: string
        description: UID of the export task
        required: true
      tags:
      - Exports
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    delete:
      operationId: api_v2_assets_exports_destroy
      description: |
        ## Deletes current export task
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: uid
        schema:
          type: string
        description: UID of the export task
        required: true
      tags:
      - Exports
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/files/:
    get:
      operationId: api_v2_assets_files_list
      description: |
        ## Retrieve current asset files

        Results can be narrowed down with a filter by type:
        ```shell
        curl -X GET https://kf.kobotoolbox.org/api/v2/assets/aSAvYreNzVEkrWg5Gdcvg/files/?collections_first=true&ordering=-name
        ```
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Files
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFilesResponseList'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    post:
      operationId: api_v2_assets_files_create
      description: |
        ## Create a new file on current asset

        Fields:

        - `asset` (required)
        - `user` (required)
        - `description` (required)
        - `file_type` (required)
        - `content` (as binary) (optional)
        - `metadata` JSON (optional)

        _Notes:_

        1. Files can have different types:
            - `map_layer`
            - `form_media`
        2. Files can be created with three different ways
            - `POST` a file with `content` parameter
            - `POST` a base64 encoded string with `base64Encoded` parameter<sup>1</sup>
            - `POST` an URL with `metadata` parameter<sup>2</sup>

        <sup>1)</sup> `metadata` becomes mandatory and must contain `filename` property<br>
        <sup>2)</sup> `metadata` becomes mandatory and must contain `redirect_url` property

        **Files with `form_media` type must have unique `filename` per asset**
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFilePayload'
            examples:
              CreatingAFileWithBinaryContent:
                value:
                  user: https://kf.kobotoolbox.org/api/v2/users/bob/
                  asset: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
                  description: Description of the file
                  file_type: image/png
                  content: <binary>
                summary: Creating a file with binary content
              CreatingAFileWithBase64Content:
                value:
                  user: https://kf.kobotoolbox.org/api/v2/users/bob/
                  asset: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
                  description: Description of the file
                  file_type: image/png
                  base64Encoded: SGVsbG8sIFdvcmxkIQ
                  metadata:
                    filename: string
                summary: Creating a file with Base64 content
              CreatingAFileWithARemoteUrl:
                value:
                  user: https://kf.kobotoolbox.org/api/v2/users/bob/
                  asset: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
                  description: Description of the file
                  file_type: image/png
                  metadata:
                    redirect_url: string
                summary: Creating a file with a remote url
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/assets/{parent_lookup_asset}/files/{uid}/:
    get:
      operationId: api_v2_assets_files_retrieve
      description: |
        ## Retrieve a file from current asset
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Files
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    delete:
      operationId: api_v2_assets_files_destroy
      description: |
        ## Delete a file from current asset
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Files
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/files/{uid}/content/:
    get:
      operationId: api_v2_assets_files_content_retrieve
      description: |
        ## Download the asset file
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Files
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: Will return a content type with the type of the attachment
            as well as the attachment itself.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/history/:
    get:
      operationId: api_v2_assets_history_list
      description: |
        ## List project history logs

        Lists all project history logs for a single project.

        ⚠️ _Required permissions: `manage_asset` (Manage project)_

        Results from this endpoint can be filtered by a Boolean query specified in the `q` parameter.

        ### Filterable fields for all project history logs:

          - date_created
          - user_uid
          - user__username
          - user__email
          - user__is_superuser
          - metadata__source
          - metadata__ip_address
          - metadata__log_subtype
            - available subtypes: "project", "permission"

        ### action

        available actions:
          - add-media
          - add-submission
          - allow-anonymous-submissions
          - archive
          - clone-permissions
          - connect-project
          - delete-media
          - delete-service
          - delete-submission
          - deploy
          - disable-sharing
          - disallow-anonymous-submissions
          - disconnect-project
          - enable-sharing
          - export
          - modify-imported-fields
          - modify-qa-data
          - modify-service
          - modify-sharing
          - modify-submission
          - modify-user-permissions
          - redeploy
           - register-service
          - replace-form
          - share-data-publicly
          - share-form-publicly
          - transfer
          - unarchive
          - unshare-data-publicly
          - unshare-form-publicly
          - update-content
          - update-name
          - update-settings
          - update-qa

        ### Filterable fields by action:

          add-media
          - metadata__asset-file__uid
          - metadata__asset-file__filename

          add-submission
          - metadata__submission__submitted_by
          - metadata__submission__root_uuid

          archive
          - metadata__latest_version_uid

          clone-permissions
          - metadata__cloned_from

          connect-project
          - metadata__paired-data__source_uid
          - metadata__paired-data__source_name

          delete-media
          - metadata__asset-file__uid
          - metadata__asset-file__filename

          delete-service
          - metadata__hook__uid
          - metadata__hook__endpoint
          - metadata__hook__active

          delete-submission
          - metadata__submission__submitted_by
          - metadata__submission__root_uuid

          deploy
          - metadata__latest_version_uid
          - metadata__latest_deployed_version_uid

          disconnect-project
          - metadata__paired-data__source_uid
          - metadata__paired-data__source_name

          modify-imported-fields
          - metadata__paired-data__source_uid
          - metadata__paired-data__source_name

          modify-qa-data
          - metadata__submission__submitted_by
          - metadata__submission__root_uuid

          modify-service
          - metadata__hook__uid
          - metadata__hook__endpoint
          - metadata__hook__active

          modify-submission
          - metadata__submission__submitted_by
          - metadata__submission__root_uuid
          - metadata__submission__status (only present if changed)

          modify-user-permissions
          - metadata__permissions__username

          redeploy
          - metadata__latest_version_uid
          - metadata__latest_deployed_version_uid

          register-service
          - metadata__hook__uid
          - metadata__hook__endpoint
          - metadata__hook__active

          transfer
          - metadata__username

          unarchive
          - metadata__latest_version_uid

          update-name
          - metadata__name__old
          - metadata__name__new

          update-settings
          - metadata__settings__description__old
          - metadata__settings__description__new

        This endpoint can be paginated with 'offset' and 'limit' parameters.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent assets
        required: true
      - in: query
        name: q
        schema:
          type: string
      tags:
      - History
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHistoryListResponseList'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/history/actions/:
    get:
      operationId: api_v2_assets_history_actions_retrieve
      description: |
        ## Retrieve distinct actions performed on the project.
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent assets
        required: true
      tags:
      - History
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryActionResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/history/export/:
    post:
      operationId: api_v2_assets_history_export_create
      description: |
        ## Export current project's history

        Exports the project's history and sends it by email to the requesting user.
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent assets
        required: true
      tags:
      - History
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historyExportResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/hooks/:
    get:
      operationId: api_v2_assets_hooks_list
      description: |
        ## List external services

        Lists the external services endpoints accessible to requesting user
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent assets
        required: true
      tags:
      - Rest Services
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHookList'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    post:
      operationId: api_v2_assets_hooks_create
      description: |
        ## Add an external service to asset.

        Where:

        * `name` and `endpoint` are required
        * `active` is True by default
        * `export_type` must be one of these values:

            1. `json` (_default_)
            2. `xml`

        * `email_notification` is a boolean. If true, User will be notified when request to remote server has failed.
        * `auth_level` must be one of these values:

            1. `no_auth` (_default_)
            2. `basic_auth`

        * `subset_fields` is the list of fields of the form definition. Only these fields should be present in data sent to remote server
        * `settings`.`custom_headers` is dictionary of `custom header`: `value`

        For example:
        >         "settings": {
        >             "customer_headers": {
        >                 "Authorization" : "Token 1af538baa9045a84c0e889f672baf83ff24"
        >             }

        * `payload_template` is a custom wrapper around `%SUBMISSION%` when sending data to remote server.
           It can be used only with JSON submission format.

        For example:
        >         "payload_template": '{"fields": %SUBMISSION%}'
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent assets
        required: true
      tags:
      - Rest Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Hook'
        required: true
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/assets/{parent_lookup_asset}/hooks/{parent_lookup_hook}/logs/:
    get:
      operationId: api_v2_assets_hooks_logs_list
      description: |
        ## List logs of an external services endpoints accessible to requesting user

        Where:
        * `asset_uid` - is the unique identifier of a specific asset
        * `hook_uid` - is the unique identifier of a specific external service
        * `uid` - is the unique identifier of a specific log

        Use the `status` query parameter to filter logs by numeric status:
        * `status=0`: hook has failed after exhausting all retries
        * `status=1`: hook is still pending
        * `status=2`: hook has succeeded

        Use the `start` and `end` query parameters to filter logs by date range, providing ISO-8601 date strings (e.g. '2022-01-14', '2022-01-21 06:51:04', '2022-01-21T06:51:08.144004+02:00').
        Note that `start` is inclusive, while `end` is exclusive.
        Time zone is assumed to be UTC. If provided, it needs to be in '+00:00' format ('Z' is not supported). Watch out for url encoding for the '+' character (%2B).
      parameters:
      - in: query
        name: end
        schema:
          type: string
          format: date-time
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent assets
        required: true
      - in: path
        name: parent_lookup_hook
        schema:
          type: string
        description: UID of the parent hook
        required: true
      - in: query
        name: start
        schema:
          type: string
          format: date-time
      - in: query
        name: status
        schema:
          type: integer
          enum:
          - 0
          - 1
          - 2
        description: |-
          * `0` - Failed
          * `1` - Pending
          * `2` - Success
      tags:
      - Rest Services
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHookLogList'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/hooks/{parent_lookup_hook}/logs/{uid}/:
    get:
      operationId: api_v2_assets_hooks_logs_retrieve
      description: |
        ## Retrieve an external service endpoint log
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent assets
        required: true
      - in: path
        name: parent_lookup_hook
        schema:
          type: string
        description: UID of the parent hook
        required: true
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Rest Services
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HookLog'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/hooks/{parent_lookup_hook}/logs/{uid}/retry/:
    patch:
      operationId: api_v2_assets_hooks_logs_retry_partial_update
      description: |
        ## Retry a failed submission attempt
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent assets
        required: true
      - in: path
        name: parent_lookup_hook
        schema:
          type: string
        description: UID of the parent hook
        required: true
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Rest Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHookLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHookLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHookLog'
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsRetryResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/hooks/{uid}/:
    get:
      operationId: api_v2_assets_hooks_retrieve
      description: |
        ## Retrieve an external service
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent assets
        required: true
      - in: path
        name: uid
        schema:
          type: string
        description: UID of the hook
        required: true
      tags:
      - Rest Services
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    patch:
      operationId: api_v2_assets_hooks_partial_update
      description: |
        ## Update an external service.
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent assets
        required: true
      - in: path
        name: uid
        schema:
          type: string
        description: UID of the hook
        required: true
      tags:
      - Rest Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHook'
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
    delete:
      operationId: api_v2_assets_hooks_destroy
      description: |
        ## Delete an external service.
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent assets
        required: true
      - in: path
        name: uid
        schema:
          type: string
        description: UID of the hook
        required: true
      tags:
      - Rest Services
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/hooks/{uid}/retry/:
    patch:
      operationId: api_v2_assets_hooks_retry_partial_update
      description: |
        ## Retries all failed attempts

        **This call is asynchronous. Job is sent to Celery to be run in background**

        It returns all logs `uid`s that are being retried.
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent assets
        required: true
      - in: path
        name: uid
        schema:
          type: string
        description: UID of the hook
        required: true
      tags:
      - Rest Services
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HookRetryResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/paired-data/:
    get:
      operationId: api_v2_assets_paired_data_list
      description: |
        ## List paired project endpoints

        This endpoint is paginated and accepts these parameters:
        - `offset`: The initial index from which to return the results
        - `limit`: Number of results to return per page
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Paired Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPairedDataResponseList'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    post:
      operationId: api_v2_assets_paired_data_create
      description: |
        ## Create a connection between two projects

        * `fields`: Optional. List of questions whose responses will be retrieved
                from the source data. If missing or empty, all responses will be
                retrieved. Questions must be identified by full group path separated by
                slashes, e.g. `group/subgroup/question_name`.
        * `filename`: Must be unique among all asset files. Only accepts letters, numbers and '-'.
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Paired Data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PairedData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PairedData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PairedData'
        required: true
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PairedDataResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/assets/{parent_lookup_asset}/paired-data/{paired_data_uid}/:
    get:
      operationId: api_v2_assets_paired_data_retrieve
      description: |
        ## Retrieve a connection between two projects
      parameters:
      - in: path
        name: paired_data_uid
        schema:
          type: string
        description: UID of the paired data
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Paired Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PairedDataResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    patch:
      operationId: api_v2_assets_paired_data_partial_update
      description: |
        ## Update a connection between two projects

        _Notes: `source` cannot be changed_
      parameters:
      - in: path
        name: paired_data_uid
        schema:
          type: string
        description: UID of the paired data
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Paired Data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPairedDataPatchPayload'
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PairedDataResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
    delete:
      operationId: api_v2_assets_paired_data_destroy
      description: |
        ## Remove a connection between two projects
      parameters:
      - in: path
        name: paired_data_uid
        schema:
          type: string
        description: UID of the paired data
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Paired Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/paired-data/{paired_data_uid}/external/:
    get:
      operationId: api_v2_assets_paired_data_external_retrieve
      description: |
        ## Return an XML which contains data submitted to paired asset

        Creates the endpoints
        - /api/v2/assets/<parent_lookup_asset>/paired-data/<paired_data_uid>/external/
        - /api/v2/assets/<parent_lookup_asset>/paired-data/<paired_data_uid>/external.xml/
      parameters:
      - in: path
        name: paired_data_uid
        schema:
          type: string
        description: UID of the paired data
        required: true
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Paired Data
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ExternalResponse'
          description: null
        '404':
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/permission-assignments/:
    get:
      operationId: api_v2_assets_permission_assignments_list
      description: |
        ## List permission assignments
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Asset Permission Assignments
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionAssignmentResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    post:
      operationId: api_v2_assets_permission_assignments_create
      description: |
        ## Assign a permission

        N.B.:
          - Filters use Mongo Query Engine to narrow down results
          - Filters are joined with `OR` operator
          - Implied permissions will be also assigned. (e.g. `change_asset` will add `view_asset` too)
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Asset Permission Assignments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionAssignmentCreateRequest'
            examples:
              CreatePartialPermission:
                value:
                  user: https://kf.kobotoolbox.org/api/v2/users/bob/
                  partial_permission:
                  - filter:
                    - _submitted_by:
                        $in:
                        - string
                    url: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/permission-assignments/pGaXCTDAbdZKLXoXAXd3M4/
                  permission: https://kf.kobotoolbox.org/api/v2/permissions/change_asset/
                summary: Create partial permission
              CreatePermission:
                value:
                  user: https://kf.kobotoolbox.org/api/v2/users/bob/
                  permission: https://kf.kobotoolbox.org/api/v2/permissions/change_asset/
                summary: Create permission
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionAssignmentResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/assets/{parent_lookup_asset}/permission-assignments/{uid}/:
    get:
      operationId: api_v2_assets_permission_assignments_retrieve
      description: |
        ## Retrieve assignments
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: uid
        schema:
          type: string
        description: UID of the permission
        required: true
      tags:
      - Asset Permission Assignments
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionAssignmentResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    delete:
      operationId: api_v2_assets_permission_assignments_destroy
      description: |
        ## Remove a permission assignment
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: uid
        schema:
          type: string
        description: UID of the permission
        required: true
      tags:
      - Asset Permission Assignments
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/permission-assignments/{uid}/delete-all/:
    delete:
      operationId: api_v2_assets_permission_assignments_delete_all_destroy
      description: |
        ## Remove all permission assignments
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: uid
        schema:
          type: string
        description: UID of the permission
        required: true
      tags:
      - Asset Permission Assignments
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/permission-assignments/bulk/:
    post:
      operationId: api_v2_assets_permission_assignments_bulk_create
      description: |
        ## Assign multiple permissions at once

        * Can put both regular and partial permission in the payload
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Asset Permission Assignments
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PermissionAssignmentBulkRequest'
        required: true
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionAssignmentResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/assets/{parent_lookup_asset}/permission-assignments/clone/:
    patch:
      operationId: api_v2_assets_permission_assignments_clone_partial_update
      description: |
        ## Clone permission assignments from another asset using uid

        Where `clone_from` is the source uid.
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Asset Permission Assignments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPermissionAssignmentCloneRequest'
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionAssignmentResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/assets/{parent_lookup_asset}/versions/:
    get:
      operationId: api_v2_assets_versions_list
      description: |
        ## List the versions of forms
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      tags:
      - Versions
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVersionListResponseList'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{parent_lookup_asset}/versions/{uid}/:
    get:
      operationId: api_v2_assets_versions_retrieve
      description: |
        ## Retrieve asset versions

        Returns the details of an asset version
      parameters:
      - in: path
        name: parent_lookup_asset
        schema:
          type: string
        description: UID of the parent asset
        required: true
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Versions
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionRetrieveResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{uid}/:
    get:
      operationId: api_v2_assets_retrieve
      description: |
        ## Get a user's current asset
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - ssjson
          - xls
          - xml
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Assets
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
            application/xml:
              schema:
                $ref: '#/components/schemas/Asset'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/Asset'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    patch:
      operationId: api_v2_assets_partial_update
      description: |
        ## Update or connect a user's asset

        Updates a project or connect project's data from this project to other projects

        When `Data sharing`:

        `fields`: Optional. List of questions whose responses will be shared. If
        missing or empty, all responses will be shared. Questions must be
        identified by full group path separated by slashes, e.g.
        `group/subgroup/question_name`.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssetPatchRequest'
            examples:
              UpdatingAnAsset:
                value:
                  content: string
                  name: string
                summary: Updating an asset
              DataSharingOfTheProject:
                value:
                  enabled: true
                  fields:
                  - string
                summary: Data sharing of the project
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
    delete:
      operationId: api_v2_assets_destroy
      description: |
        ## Delete a user's asset
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Assets
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{uid}/content/:
    get:
      operationId: api_v2_assets_content_retrieve
      description: |
        ## Return the content of a user's asset.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Assets
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{uid}/deployment/:
    get:
      operationId: api_v2_assets_deployment_retrieve
      description: |
        ## Retrieve the existing deployment (if any)
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Deployment
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    post:
      operationId: api_v2_assets_deployment_create
      description: |
        ## (Re)Deploy a form

        Deploy a new form or re-deploy an existing one.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Deployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentCreateRequest'
        required: true
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
    patch:
      operationId: api_v2_assets_deployment_partial_update
      description: |
        ## (Un)Archive the existing deployment.

        Update the `active` field of the existing deployment.

        To overwrite the entire deployment (including the form contents), use a PUT request.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Deployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeploymentPatchRequest'
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/assets/{uid}/reports/:
    get:
      operationId: api_v2_assets_reports_retrieve
      description: |
        ## Report of a user's asset

        Returns the submission data for all deployments of a survey.
        This data is grouped by answers, and does not show the data for individual submissions.
        The endpoint will return a **404 NOT FOUND** error if the asset is not deployed and will only return the data for the most recently deployed version.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Assets
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{uid}/table_view/:
    get:
      operationId: api_v2_assets_table_view_retrieve
      description: |
        ## Return plain HTML of survey in tabular format
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Assets
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            text/html:
              schema:
                type: string
              examples:
                TableViewExample:
                  value: |
                    <!doctype html>
                    <html><body><code><pre>#survey

                    | type    | name       | label      | default   | required   |
                    |---------+------------+------------+-----------+------------|
                    | start   | start      |            |           |            |
                    | end     | end        |            |           |            |
                    | text    | Question_1 | Question 1 |           | true       |
                    | integer | Question_2 | Question 2 |           | false      |
                    </pre></code></body></html>
                  summary: Expected HTML response
          description: ''
        '404':
          description: No response body
  /api/v2/assets/{uid}/valid_content/:
    get:
      operationId: api_v2_assets_valid_content_retrieve
      description: |
        ## Return valid content for user's asset
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Assets
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetValidContentResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/{uid}/xform/:
    get:
      operationId: api_v2_assets_xform_retrieve
      description: |
        ## This route will render the XForm into syntax-highlighted HTML.

        It is useful for debugging pyxform transformations
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Assets
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            text/html:
              schema:
                type: string
              examples:
                XFORMExample:
                  value: |+
                    <?xml version="1.0"?>
                    <h:html xmlns="http://www.w3.org/2002/xforms" xmlns:h="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:jr="http://openrosa.org/javarosa" xmlns:orx="http://openrosa.org/xforms" xmlns:odk="http://www.opendatakit.org/xforms">
                      <h:head>
                        <h:title>Project 1 EXAMPLE</h:title>
                        <model odk:xforms-version="1.0.0">
                          <itext>
                            <translation lang="default" default="true()">
                              <text id="/akJTPb4JLVFqXMqYhKiPXZ/Question_1:hint">
                                <value form="guidance">This is an example</value>
                              </text>
                            </translation>
                          </itext>
                          <instance>
                            <akJTPb4JLVFqXMqYhKiPXZ id="akJTPb4JLVFqXMqYhKiPXZ">
                              <start/>
                              <end/>
                              <Question_1>Example 1</Question_1>
                              <Question_2/>
                              <meta>
                                <instanceID/>
                              </meta>
                            </akJTPb4JLVFqXMqYhKiPXZ>
                          </instance>
                          <bind nodeset="/akJTPb4JLVFqXMqYhKiPXZ/start" jr:preload="timestamp" type="dateTime" jr:preloadParams="start"/>
                          <bind nodeset="/akJTPb4JLVFqXMqYhKiPXZ/end" jr:preload="timestamp" type="dateTime" jr:preloadParams="end"/>
                          <bind nodeset="/akJTPb4JLVFqXMqYhKiPXZ/Question_1" type="string" required="true()" constraint=". != 'wrong'" jr:constraintMsg="This is not right"/>
                          <bind nodeset="/akJTPb4JLVFqXMqYhKiPXZ/Question_2" type="int" required="false()"/>
                          <bind nodeset="/akJTPb4JLVFqXMqYhKiPXZ/meta/instanceID" type="string" readonly="true()" jr:preload="uid"/>
                        </model>
                      </h:head>
                      <h:body>
                        <input appearance="numbers" ref="/akJTPb4JLVFqXMqYhKiPXZ/Question_1">
                          <label>Question 1</label>
                          <hint ref="jr:itext('/akJTPb4JLVFqXMqYhKiPXZ/Question_1:hint')"/>
                        </input>
                        <input ref="/akJTPb4JLVFqXMqYhKiPXZ/Question_2">
                          <label>Question 2</label>
                        </input>
                      </h:body>
                    </h:html>

                  summary: Expected HTML response
          description: ''
        '404':
          description: No response body
  /api/v2/assets/{uid}/xls/:
    get:
      operationId: api_v2_assets_xls_retrieve
      description: |
        ## Return plain HTML of survey in tabular format
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Assets
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            text/html:
              schema:
                type: string
              examples:
                XLSExample:
                  value: |
                    <!doctype html>
                    <html><body><code><pre>#survey

                    | type    | name       | label      | default   | required   |
                    |---------+------------+------------+-----------+------------|
                    | start   | start      |            |           |            |
                    | end     | end        |            |           |            |
                    | text    | Question_1 | Question 1 |           | true       |
                    | integer | Question_2 | Question 2 |           | false      |
                    </pre></code></body></html>
                  summary: Expected HTML response
          description: ''
        '404':
          description: No response body
  /api/v2/assets/bulk/:
    post:
      operationId: api_v2_assets_bulk_create
      description: |
        ## Perform bulk actions on assets

        Actions available:

        - `archive`
        - `delete`
        - `unarchive`
        - `undelete` (superusers only)
      tags:
      - Assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetBulkRequest'
            examples:
              PerformActionOnOneOrMoreAsset:
                value:
                  asset_uids:
                    asset_uids:
                    - {}
                  action: string
                summary: Perform action on one or more asset
              PerformBulkOnALLAsset:
                value:
                  confirm: true
                  action: string
                summary: Perform bulk on ALL asset
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetBulkResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/assets/hash/:
    get:
      operationId: api_v2_assets_hash_retrieve
      description: |
        ## Get a hash of all `version_id`s of all accessible assets by the current user.

        Useful to detect any changes in assets with only one call to `API`
      tags:
      - Assets
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
  /api/v2/assets/metadata/:
    get:
      operationId: api_v2_assets_metadata_retrieve
      description: |
        ## Get metadata for all authenticated user' assets
      tags:
      - Assets
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetMetadataResponse'
          description: null
  /api/v2/audit-logs/:
    get:
      operationId: api_v2_audit_logs_list
      description: |
        ## List actions performed by users.

        ⚠️ _Only available to superusers_

        Results from this endpoint can be filtered by a Boolean query specified in the `q` parameter.

        **Filterable fields:**

        * app_label
        * model_name
        * action
          Available actions:
           * create
           * delete
           * in-trash
           * put-back
           * remove
           * update
           * auth
        * log_type
          Available log types:
            * access
            * project-history
            * data-editing
            * submission-management
            * user-management
            * asset-management
        * date_created
        * user_uid
        * user__username
        * user__email
        * user__is_superuser
        * metadata__asset_uid
        * metadata__auth_type

        *Notes: Some logs may have additional filterable fields in the metadata*

        **Some examples:**

        * All deleted submissions
            `api/v2/audit-logs/?q=action:delete`
        * All deleted submissions of a specific project `aTJ3vi2KRGYj2NytSzBPp7`
            `api/v2/audit-logs/?q=action:delete AND metadata__asset_uid:aTJ3vi2KRGYj2NytSzBPp7`
        * All submissions deleted by a specific user `my_username`
            `api/v2/audit-logs/?q=action:delete AND user__username:my_username`
        * All deleted submissions submitted after a specific date
            `/api/v2/audit-logs/?q=action:delete AND date_created__gte:2022-11-15`
        * All deleted submissions submitted after a specific date **and time**
            `/api/v2/audit-logs/?q=action:delete AND date_created__gte:"2022-11-15 20:34"`
        * All authentications from superusers
            `api/v2/audit-logs/?q=action:auth AND user__is_superuser:True`

        *Notes: Do not forget to wrap search terms in double-quotes if they contain spaces
        (e.g. date and time "2022-11-15 20:34")*
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: q
        schema:
          type: string
      tags:
      - Audit Logs
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuditLogResponseList'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/imports/:
    get:
      operationId: api_v2_imports_list
      description: |
        ## List imported files
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Imports
      security:
      - BasicAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedImportResponseList'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
    post:
      operationId: api_v2_imports_create
      description: |
        ## Import file

        _**Note**: this endpoint is expecting a multipart/form-data_
      tags:
      - Imports
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImportCreateRequest'
        required: true
      security:
      - BasicAuth: []
      - TokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportCreateResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/imports/{uid}/:
    get:
      operationId: api_v2_imports_retrieve
      description: |
        ## Retrieve imported files
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Imports
      security:
      - BasicAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/languages/:
    get:
      operationId: api_v2_languages_list
      description: |
        ## List the languages accessible to requesting (authenticated) user.

        Search can be made with `q` parameter. By default, search for the term in language names or language codes.

        Examples:
        ```shell
          curl -X GET https://kf.kobotoolbox.org/api/v2/languages/?q=fr
        ```

        Complex searches can be done on other fields, such as `transcription_services` and `translation_services`.

        Examples:
        ```shell
          curl -X GET https://kf.kobotoolbox.org/api/v2/languages/?q=transcription_services__code:goog AND translation_services__code:goog
        ```

        Results are order by `featured` first (descending order), then by their name.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Languages
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLanguageListList'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
  /api/v2/languages/{code}/:
    get:
      operationId: api_v2_languages_retrieve
      description: |
        ## Retrieve one language

        * `code` - is the unique identifier of a specific language
      parameters:
      - in: path
        name: code
        schema:
          type: string
        required: true
      tags:
      - Languages
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/organizations/:
    get:
      operationId: api_v2_organizations_list
      description: |
        ## List user's organizations
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Organizations
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationList'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/organizations/{id}/:
    get:
      operationId: api_v2_organizations_retrieve
      description: |
        ## Retrieve organization's details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this organization.
        required: true
      tags:
      - Organizations
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    patch:
      operationId: api_v2_organizations_partial_update
      description: |
        ## Update organization's details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this organization.
        required: true
      tags:
      - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationPatchPayload'
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/organizations/{id}/asset_usage/:
    get:
      operationId: api_v2_organizations_asset_usage_retrieve
      description: |
        ## Retrieve organization asset usage tracker

        Tracks the total usage of each asset for the user in the given organization
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this organization.
        required: true
      tags:
      - Organizations
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationAssetUsageResponseList'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/organizations/{id}/assets/:
    get:
      operationId: api_v2_organizations_assets_retrieve
      description: |
        ## Retrieve Organization Assets

        This endpoint returns all assets associated with a specific organization.
        The assets listed here are restricted to those owned by the specified
        organization.

        Only the owner or administrators of the organization can access this endpoint.

        ### Additional Information
        For more details, please refer to `/api/v2/assets/`.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this organization.
        required: true
      tags:
      - Organizations
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetList'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/organizations/{id}/service_usage/:
    get:
      operationId: api_v2_organizations_service_usage_retrieve
      description: |
        ## Organization Usage Tracker

        - Tracks the total usage of different services for each account in an organization
        - Tracks the submissions and NLP seconds/characters for the current month/year/all time
        - Tracks the current total storage used
        - Includes a detailed list of balances relative to a user's usage limits
        - If no organization is found with the provided ID, returns the usage for the logged-in user

        **This endpoint is cached for an amount of time determined by ENDPOINT_CACHE_DURATION**
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this organization.
        required: true
      tags:
      - Organizations
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationServiceUsageResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/organizations/{organization_id}/invites/:
    get:
      operationId: api_v2_organizations_invites_list
      description: |
        ## List organization invites
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: organization_id
        schema:
          type: string
        description: ID of the organization asset
        required: true
      tags:
      - Organization Invites
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInviteResponseList'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    post:
      operationId: api_v2_organizations_invites_create
      description: |
        ## Create Organization Invite

        * Create organization invites for registered and unregistered users.
        * Set the role for which the user is being invited -
        (Choices: `member`, `admin`). Default is `member`.
      parameters:
      - in: path
        name: organization_id
        schema:
          type: string
        description: ID of the organization asset
        required: true
      tags:
      - Organization Invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteCreatePayload'
        required: true
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteCreateResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/organizations/{organization_id}/invites/{guid}/:
    get:
      operationId: api_v2_organizations_invites_retrieve
      description: |
        ## Retrieve organization invite
      parameters:
      - in: path
        name: guid
        schema:
          type: string
        description: GUID of the invite
        required: true
      - in: path
        name: organization_id
        schema:
          type: string
        description: ID of the organization asset
        required: true
      tags:
      - Organization Invites
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    patch:
      operationId: api_v2_organizations_invites_partial_update
      description: |+
        ## Update Organization Invite

        * Update an organization invite to accept, decline, cancel, expire, or resend.
        * Update the role of the invitee to `admin` or `member`. Only the owner or admin can update the role.

      parameters:
      - in: path
        name: guid
        schema:
          type: string
        description: GUID of the invite
        required: true
      - in: path
        name: organization_id
        schema:
          type: string
        description: ID of the organization asset
        required: true
      tags:
      - Organization Invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvitePatchPayload'
            examples:
              UpdatingStatus:
                value:
                  status: string
                summary: Updating status
              UpdatingRole:
                value:
                  role: string
                summary: Updating role
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
    delete:
      operationId: api_v2_organizations_invites_destroy
      description: |
        ## Delete Organization Invite

        * Organization owner or admin can delete an organization invite.
      parameters:
      - in: path
        name: guid
        schema:
          type: string
        description: GUID of the invite
        required: true
      - in: path
        name: organization_id
        schema:
          type: string
        description: ID of the organization asset
        required: true
      tags:
      - Organization Invites
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/organizations/{organization_id}/members/:
    get:
      operationId: api_v2_organizations_members_list
      description: |
        ## List Members

        Retrieves all members in the specified organization.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: organization_id
        schema:
          type: string
        description: ID of the organization
        required: true
      tags:
      - Organization Members
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMemberListResponseList'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/organizations/{organization_id}/members/{user__username}/:
    get:
      operationId: api_v2_organizations_members_retrieve
      description: |
        ## Retrieve Member Details

        Retrieves the details of a specific member within an organization by username.
      parameters:
      - in: path
        name: organization_id
        schema:
          type: string
        description: ID of the organization
        required: true
      - in: path
        name: user__username
        schema:
          type: string
        description: Username of the user
        required: true
      tags:
      - Organization Members
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberListResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    patch:
      operationId: api_v2_organizations_members_partial_update
      description: |
        ## Update Member Role

        Updates the role of a member within the organization to `admin` or
        `member`.

        - **admin**: Grants the member admin privileges within the organization
        - **member**: Revokes admin privileges, setting the member as a regular user
      parameters:
      - in: path
        name: organization_id
        schema:
          type: string
        description: ID of the organization
        required: true
      - in: path
        name: user__username
        schema:
          type: string
        description: Username of the user
        required: true
      tags:
      - Organization Members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMemberPatchRequest'
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberListResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
    delete:
      operationId: api_v2_organizations_members_destroy
      description: |
        ## Remove Member

        Delete an organization member.
      parameters:
      - in: path
        name: organization_id
        schema:
          type: string
        description: ID of the organization
        required: true
      - in: path
        name: user__username
        schema:
          type: string
        description: Username of the user
        required: true
      tags:
      - Organization Members
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/permissions/:
    get:
      operationId: api_v2_permissions_list
      description: |
        ## List all assignable permissions for `Asset`

        The `implied` property of a given permission shows which additional
        permissions are automatically granted when assigning that particular
        permission.

        The `contradictory` property shows which permissions are removed when
        assigning that particular permission.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Permissions
      security:
      - BasicAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionResponseList'
          description: null
  /api/v2/permissions/{codename}/:
    get:
      operationId: api_v2_permissions_retrieve
      description: |
        ## Retrieve a codename's permissions
      parameters:
      - in: path
        name: codename
        schema:
          type: string
        required: true
      tags:
      - Permissions
      security:
      - BasicAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
          description: null
  /api/v2/project-history-logs/:
    get:
      operationId: api_v2_project_history_logs_list
      description: |
        ## List all project history logs for all projects.

        ⚠️_Only available to superusers_

        Results from this endpoint can be filtered by a Boolean query
        specified in the `q` parameter.

        **Filterable fields for all project history logs:**

        * date_created
        * user_uid
        * user__username
        * user__email
        * user__is_superuser
        * metadata__source
        * metadata__ip_address
        * metadata__asset_uid
        * metadata__log_subtype
            * available subtypes: "project", "permission"
        * action

        available actions:

        >       add-media
        >       add-submission
        >       allow-anonymous-submissions
        >       archive
        >       clone-permissions
        >       connect-project
        >       delete-media
        >       delete-service
        >       delete-submission
        >       deploy
        >       disable-sharing
        >       disallow-anonymous-submissions
        >       disconnect-project
        >       enable-sharing
        >       export
        >       modify-imported-fields
        >       modify-qa-data
        >       modify-service
        >       modify-sharing
        >       modify-submission
        >       modify-user-permissions
        >       redeploy
        >       register-service
        >       replace-form
        >       share-data-publicly
        >       share-form-publicly
        >       transfer
        >       unarchive
        >       unshare-data-publicly
        >       unshare-form-publicly
        >       update-content
        >       update-name
        >       update-settings
        >       update-qa

        **Filterable fields by action:**

        * add-media

            a. metadata__asset-file__uid

            b. metadata__asset-file__filename

        * add-submission

            a. metadata__submission__submitted_by

            b. metadata__submission__root_uuid

        * archive

            a. metadata__latest_version_uid

        * clone-permissions

            a. metadata__cloned_from

        * connect-project

            a. metadata__paired-data__source_uid

            b. metadata__paired-data__source_name

        * delete-media

            a. metadata__asset-file__uid

            b. metadata__asset-file__filename

        * delete-service

            a. metadata__hook__uid

            b. metadata__hook__endpoint

            c. metadata__hook__active

        * delete-submission

            a. metadata__submission__submitted_by

            b. metadata__submission__root_uuid

        * deploy

            a. metadata__latest_version_uid

            b. metadata__latest_deployed_version_uid

        * disconnect-project

            a. metadata__paired-data__source_uid

            b. metadata__paired-data__source_name

        * modify-imported-fields

            a. metadata__paired-data__source_uid

            b. metadata__paired-data__source_name

        * modify-qa-data

            a. metadata__submission__submitted_by

            b. metadata__submission__root_uuid

        * modify-service

            a. metadata__hook__uid

            b. metadata__hook__endpoint

            c. metadata__hook__active

        * modify-submission

            a. metadata__submission__submitted_by

            b. metadata__submission__root_uuid

            b. metadata__submission__status (only present if changed)

        * modify-user-permissions

            a. metadata__permissions__username

        * redeploy

            a. metadata__latest_version_uid

            b. metadata__latest_deployed_version_uid

        * register-service

            a. metadata__hook__uid

            b. metadata__hook__endpoint

            c. metadata__hook__active

        * transfer

            a. metadata__username

        * unarchive

            a. metadata__latest_version_uid

        * update-name

            a. metadata__name__old

            b. metadata__name__new

        * update-settings

            a. metadata__settings__description__old

            b. metadata__settings__description__new

        This endpoint can be paginated with 'offset' and 'limit' parameters
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: q
        schema:
          type: string
      tags:
      - Project History Logs
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectHistoryLogResponseList'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/project-history-logs/export/:
    get:
      operationId: api_v2_project_history_logs_export_retrieve
      description: |
        ## List of Project History Exports

        ⚠️ _Only available to superusers_
      tags:
      - Project History Logs
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportHistoryResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    post:
      operationId: api_v2_project_history_logs_export_create
      description: |
        ## Create an export of projects history logs

        ⚠️ _Only available to superusers_

        Export project history logs and send it by email to the requesting user.
      tags:
      - Project History Logs
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportHistoryResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/project-ownership/invites/:
    get:
      operationId: api_v2_project_ownership_invites_list
      description: |+
        ## List of invites

        Invites sent or received by current user about transferring project ownership.

        List can be filtered with `mode` parameter,  e.g.: display only received invites.

        Possible values for `mode`:
        - `sender`
        - `recipient`

      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: mode
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Project Ownership Invites
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectInviteResponseList'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
    post:
      operationId: api_v2_project_ownership_invites_create
      description: |+
        ## Create (send) an invite

        Where the assets `uid` are given in the payload's list


      tags:
      - Project Ownership Invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectInviteCreatePayload'
        required: true
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectInviteResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/project-ownership/invites/{parent_lookup_invite_uid}/transfers/{uid}/:
    get:
      operationId: api_v2_project_ownership_invites_transfers_retrieve
      description: |
        ## Retrieve transfer details
      parameters:
      - in: path
        name: parent_lookup_invite_uid
        schema:
          type: string
        description: UID of the parent invite
        required: true
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Transfers
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferListResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/project-ownership/invites/{uid}/:
    get:
      operationId: api_v2_project_ownership_invites_retrieve
      description: |
        ## Invite detail

        It can be useful to monitor the invite status while the transfer is being processed
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Project Ownership Invites
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectInviteResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    patch:
      operationId: api_v2_project_ownership_invites_partial_update
      description: |+
        ## Update an invite status

        Update the status of an invite.
        Status accepted:
        - `cancelled`
        - `accepted`
        - `declined`

        **Notes**:
        - _When submitting `accepted` the invite status becomes automatically `in_progress`_
        - _Only the sender can cancel an invite, and **if only if** the invite is still pending._
        - _Only the recipient can accept or decline, **if and only if** the invite is still pending._

      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Project Ownership Invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInviteUpdatePayload'
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectInviteResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
    delete:
      operationId: api_v2_project_ownership_invites_destroy
      description: |
        ## Delete invite
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Project Ownership Invites
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/project-views/:
    get:
      operationId: api_v2_project_views_list
      description: |
        ## List project views for current user
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Project Views
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectViewListResponseList'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
  /api/v2/project-views/{uid}/:
    get:
      operationId: api_v2_project_views_retrieve
      description: |
        ## Retrieve project view of a shared project to current user
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Project Views
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectViewListResponse'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/project-views/{uid}/{obj_type}/export/:
    get:
      operationId: api_v2_project_views_export_retrieve
      description: |+
        ## Retrieve an export for the requested object

        * Note: `{obj_type}` can either be `users` or `assets`

      parameters:
      - in: path
        name: obj_type
        schema:
          type: string
          pattern: ^(assets|users)$
        required: true
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Project Views
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectViewExportResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
    post:
      operationId: api_v2_project_views_export_create
      description: |
        ## Create an export for the requested object

        * Note: `{obj_type}` can either be `users` or `assets`
      parameters:
      - in: path
        name: obj_type
        schema:
          type: string
          pattern: ^(assets|users)$
        required: true
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Project Views
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectViewExportCreateResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/project-views/{uid}/assets/:
    get:
      operationId: api_v2_project_views_assets_retrieve
      description: |
        ## Retrieve assets available in project view
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
        description: Paginate results with limit parameter
      - in: query
        name: offset
        schema:
          type: integer
        description: Paginate results with offset parameter
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Project Views
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectViewAssetResponseList'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/project-views/{uid}/users/:
    get:
      operationId: api_v2_project_views_users_retrieve
      description: |
        ## Retrieve users available in project view
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
        description: Paginate results with limit parameter
      - in: query
        name: offset
        schema:
          type: integer
        description: Paginate results with offset parameter
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - Project Views
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectViewUserResponseList'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/service_usage/:
    get:
      operationId: api_v2_service_usage_list
      description: |
        <span class='label label-warning'>⚠️ Deprecated</span>
        ## Track Service Usage

        Tracks the total usage of different services for the logged-in user. </br>
        Tracks the submissions and NLP seconds/characters for the current month/year/all time. </br>
        Tracks the current total storage used. </br>
        Note: this endpoint is not currently used by the frontend to display usage information. </br>
        See `/api/v2/organizations/{organization_id}/service_usage/` for the endpoint we use on the Usage page. </br>
      tags:
      - Service Usage
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceUsageResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
  /api/v2/tags/:
    get:
      operationId: api_v2_tags_list
      description: |
        ## List current user's assets' tags
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Tags
      security:
      - BasicAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagListResponseList'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
  /api/v2/tags/{taguid__uid}/:
    get:
      operationId: api_v2_tags_retrieve
      description: |
        ## Retrieve a tag's data
      parameters:
      - in: path
        name: taguid__uid
        schema:
          type: string
        required: true
      tags:
      - Tags
      security:
      - BasicAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagRetrieveResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/terms-of-service/:
    get:
      operationId: api_v2_terms_of_service_list
      description: |
        ## List the different terms of service
      tags:
      - Terms of Services
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TermsOfServiceResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
  /api/v2/terms-of-service/{slug}/:
    get:
      operationId: api_v2_terms_of_service_retrieve
      description: |
        ## Retrieve a specific terms of service
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - Terms of Services
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsOfServiceResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/transcription-services/:
    get:
      operationId: api_v2_transcription_services_list
      description: |
        ## List the transcription services accessible to requesting user.

        Search can be made with `q` parameter to search for the term in names and codes.

        Results are order by name.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: q
        schema:
          type: string
      tags:
      - Transcription Services
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTranscriptionServiceList'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
  /api/v2/transcription-services/{code}/:
    get:
      operationId: api_v2_transcription_services_retrieve
      description: |
        ## retrieve a transcription service

        * `code` - is the unique identifier of a specific language
      parameters:
      - in: path
        name: code
        schema:
          type: string
        required: true
      tags:
      - Transcription Services
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranscriptionService'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/translation-services/:
    get:
      operationId: api_v2_translation_services_list
      description: |+
        ## List the translation services accessible to requesting (authenticated) user.

        Search can be made with `q` parameter to search for the term in names and codes.

        Results are ordered by name.

      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: q
        schema:
          type: string
      tags:
      - Translation Services
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTranslationServiceList'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /api/v2/translation-services/{code}/:
    get:
      operationId: api_v2_translation_services_retrieve
      description: |
        ## Retrieve a translation service

        * `code` - is the unique identifier of a specific language
      parameters:
      - in: path
        name: code
        schema:
          type: string
        required: true
      tags:
      - Translation Services
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationService'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /api/v2/users/:
    get:
      operationId: api_v2_users_list
      description: |
        ## List users
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Users
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserListResponseList'
          description: null
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
  /api/v2/users/{username}/:
    get:
      operationId: api_v2_users_retrieve
      description: |
        ## Retrieve a user
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - Users
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRetrieveResponse'
          description: null
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
  /me/:
    get:
      operationId: me_retrieve
      description: |
        ## Retrieve current user profile
      tags:
      - Me
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeListResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
    patch:
      operationId: me_partial_update
      description: |
        ## Update current user infos
      tags:
      - Me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCurrentUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCurrentUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCurrentUser'
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeListResponse'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
    delete:
      operationId: me_destroy
      description: |
        ## Delete current user

        > Payload Example:
        >
        >       {
        >           "confirm": "user__extra_details__uid",
        >       }


        ### !! Due to current DRF-Spectacular limitations with AOS 3.1, DELETE operations do not display request or response bodies in this documentation (as payloads are not typically recommended for DELETE). This means direct testing is unavailable. However, example payloads and responses are provided for reference, and HTTP codes/error messages are accurate.  !!
      tags:
      - Me
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                AccessDenied:
                  value:
                    detail: You do not have permission to perform this action.
                  summary: Access Denied
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /me/emails/:
    get:
      operationId: me_emails_list
      description: |
        ## View current user's email
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Me
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmailAddressList'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
    post:
      operationId: me_emails_create
      description: |
        ## Set a new email

        The new email will be unverified and replace existing unverified, non-primary emails.
        New email is not usable until verified.
      tags:
      - Me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequestPayload'
        required: true
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddress'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
              examples:
                BadRequest:
                  value:
                    detail:
                      field_name:
                      - Error message
                  summary: Bad request
          description: ''
  /me/social-accounts/:
    get:
      operationId: me_social_accounts_list
      description: |
        ## List user's social accounts
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Me
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSocialAccountList'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
  /me/social-accounts/{provider}/{uid}/:
    get:
      operationId: me_social_accounts_retrieve
      description: |
        ## Retrieve a social account provider
      parameters:
      - in: path
        name: provider
        schema:
          type: string
        required: true
      - in: path
        name: uid
        schema:
          type: string
          pattern: ^[-\w]+$
        required: true
      tags:
      - Me
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialAccount'
          description: null
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
    delete:
      operationId: me_social_accounts_destroy
      description: |
        ## Delete a social account provider
      parameters:
      - in: path
        name: provider
        schema:
          type: string
        required: true
      - in: path
        name: uid
        schema:
          type: string
          pattern: ^[-\w]+$
        required: true
      tags:
      - Me
      security:
      - BasicAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotAuthenticated:
                  value:
                    detail: Authentication credentials were not provided.
                  summary: Not authenticated
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              examples:
                NotFound:
                  value:
                    detail: Not found.
                  summary: Not Found
          description: ''
components:
  schemas:
    AccessLogResponse:
      type: object
      properties:
        user:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/users/bob/
        date_created:
          type: string
          format: date-time
        username:
          type: string
        metadata:
          type: object
          properties:
            source:
              type: string
            auth_type:
              type: string
            ip_address:
              type: string
            initial_user_uid:
              type: string
            initial_user_username:
              type: string
            authorized_app_name:
              type: string
        user_uid:
          type: string
        count:
          type: integer
      required:
      - count
      - date_created
      - metadata
      - user
      - user_uid
      - username
    Asset:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/aBeA23YCYjkGTFvYVHuAyU/
          readOnly: true
        owner:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/users/bob/
          readOnly: true
        owner__username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        parent:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
          nullable: true
        settings:
          type: object
          properties:
            sector:
              type: object
            country:
              type: array
              items:
                type: string
            description:
              type: string
            collects_pii:
              type: string
            organization:
              type: string
            country_codes:
              type: array
              items:
                type: string
            operational_purpose:
              type: string
        asset_type:
          $ref: '#/components/schemas/AssetTypeEnum'
        files:
          type: array
          items:
            type: string
          readOnly: true
        summary:
          type: object
          properties:
            geo:
              type: boolean
            labels:
              type: array
              items:
                type: string
            columns:
              type: array
              items:
                type: string
            lock_all:
              type: boolean
            lock_any:
              type: boolean
            languages:
              type: array
              items:
                type: string
            row_count:
              type: integer
            name_quality:
              type: object
            default_translation:
              type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
        date_modified:
          type: string
          format: date-time
        date_deployed:
          type: string
          format: date-time
          nullable: true
        version_id:
          type: string
          readOnly: true
        version__content_hash:
          type: string
          readOnly: true
        version_count:
          type: integer
          readOnly: true
        has_deployment:
          type: boolean
          readOnly: true
        deployed_version_id:
          type: string
          readOnly: true
        deployed_versions:
          type: object
          properties:
            count:
              type: integer
            next:
              type: string
            previous:
              type: string
            results:
              type: array
              items:
                type: object
                properties:
                  uid:
                    type: string
                  url:
                    type: string
                    format: uri
                    example: https://kf.kobotoolbox.org/api/v2/assets/aBeA23YCYjkGTFvYVHuAyU/versions/vBeA23YCYjkGTFvYVHuAyU/
                  content_hash:
                    type: string
                  date_deployed:
                    type: string
                    format: date-time
                  date_modified:
                    type: string
                    format: date-time
          readOnly: true
        deployment__links:
          type: object
          readOnly: true
        deployment__active:
          type: boolean
          readOnly: true
        deployment__data_download_links:
          type: object
          readOnly: true
        deployment__submission_count:
          type: integer
          readOnly: true
        deployment__last_submission_time:
          type: string
          format: date-time
          readOnly: true
        deployment__encrypted:
          type: boolean
          readOnly: true
        deployment__uuid:
          type: string
          readOnly: true
        deployment_status:
          type: string
          readOnly: true
        report_styles:
          type: object
          properties:
            default:
              type: object
            specified:
              type: object
              properties:
                end:
                  type: object
                start:
                  type: object
            kuid_names:
              type: object
              properties:
                end:
                  type: string
                start:
                  type: string
        report_custom:
          type: object
        advanced_features:
          type: object
        advanced_submission_schema:
          type: object
          properties:
            type:
              type: string
            $description:
              type: string
          readOnly: true
        analysis_form_json:
          type: object
          properties:
            engines:
              type: object
            additional_fields:
              type: array
              items:
                type: string
          readOnly: true
        map_styles:
          type: object
        map_custom:
          type: object
        content:
          type: object
          properties:
            schema:
              type: string
            survey:
              type: array
              items:
                type: object
            settings:
              type: object
            translated:
              type: array
              items:
                type: string
            translations:
              type: array
              items:
                type: string
        downloads:
          type: array
          items:
            type: object
            properties:
              format:
                type: string
              url:
                type: string
          readOnly: true
        embeds:
          type: array
          items:
            type: object
            properties:
              format:
                type: string
              url:
                type: string
          readOnly: true
        xform_link:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/aBeA23YCYjkGTFvYVHuAyU/xform/
          readOnly: true
        hooks_link:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/aBeA23YCYjkGTFvYVHuAyU/hooks/
          readOnly: true
        tag_string:
          type: string
        uid:
          type: string
          readOnly: true
        kind:
          type: string
          readOnly: true
        xls_link:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/aBeA23YCYjkGTFvYVHuAyU/
          readOnly: true
        name:
          type: string
          maxLength: 255
        assignable_permissions:
          type: array
          items:
            type: object
          readOnly: true
        permissions:
          type: array
          items:
            type: string
          readOnly: true
        effective_permissions:
          type: array
          items:
            type: object
            properties:
              codename:
                type: string
          readOnly: true
        exports:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/aBeA23YCYjkGTFvYVHuAyU/exports/
          readOnly: true
        export_settings:
          type: array
          items:
            $ref: '#/components/schemas/AssetExportSettings'
          readOnly: true
        data:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/aBeA23YCYjkGTFvYVHuAyU/submissions/
          readOnly: true
        children:
          type: object
          properties:
            count:
              type: integer
          readOnly: true
        subscribers_count:
          type: integer
          readOnly: true
        status:
          type: string
          readOnly: true
        access_types:
          type: array
          items:
            type: string
          readOnly: true
        data_sharing:
          type: object
        paired_data:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/aBeA23YCYjkGTFvYVHuAyU/paired-data/
          readOnly: true
        project_ownership:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
        owner_label:
          type: string
          readOnly: true
        last_modified_by:
          type: string
          readOnly: true
          nullable: true
      required:
      - access_types
      - advanced_submission_schema
      - analysis_form_json
      - asset_type
      - assignable_permissions
      - children
      - data
      - deployed_version_id
      - deployed_versions
      - deployment__active
      - deployment__data_download_links
      - deployment__encrypted
      - deployment__last_submission_time
      - deployment__links
      - deployment__submission_count
      - deployment__uuid
      - deployment_status
      - downloads
      - effective_permissions
      - embeds
      - export_settings
      - exports
      - files
      - has_deployment
      - hooks_link
      - kind
      - last_modified_by
      - owner
      - owner__username
      - owner_label
      - paired_data
      - permissions
      - project_ownership
      - status
      - subscribers_count
      - summary
      - uid
      - url
      - version__content_hash
      - version_count
      - version_id
      - xform_link
      - xls_link
    AssetBulkRequest:
      oneOf:
      - type: object
        properties:
          asset_uids:
            type: object
            properties:
              asset_uids:
                type: array
                items:
                  type: object
          action:
            type: string
        required:
        - action
        - asset_uids
      - type: object
        properties:
          confirm:
            type: boolean
          action:
            type: string
        required:
        - action
        - confirm
    AssetBulkResponse:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    AssetCountResponse:
      type: object
      properties:
        daily_submission_count:
          type: object
          properties:
            '2020-10-20':
              type: integer
        total_submission_count:
          type: integer
      required:
      - daily_submission_count
      - total_submission_count
    AssetCreateRequest:
      oneOf:
      - type: object
        properties:
          name:
            type: string
          clone_from:
            type: string
          asset_type:
            type: string
        required:
        - asset_type
        - clone_from
        - name
      - type: object
        properties:
          name:
            type: string
          settings:
            type: object
            properties:
              description:
                type: string
              sector:
                type: string
              country:
                type: string
              share-metadata:
                type: boolean
          asset_type:
            type: string
        required:
        - asset_type
        - name
        - settings
    AssetExportSettings:
      type: object
      properties:
        uid:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        data_url_csv:
          type: string
          readOnly: true
        data_url_xlsx:
          type: string
          readOnly: true
        name:
          type: string
        date_modified:
          type: string
          format: date-time
          readOnly: true
        export_settings:
          type: object
          additionalProperties: {}
      required:
      - data_url_csv
      - data_url_xlsx
      - date_modified
      - export_settings
      - name
      - uid
      - url
    AssetMetadataResponse:
      type: object
      properties:
        languages:
          type: array
          items:
            type: string
        countries:
          type: array
          items:
            type: array
            items:
              type: string
        sectors:
          type: array
          items:
            type: array
            items:
              type: string
        organizations:
          type: array
          items:
            type: string
      required:
      - countries
      - languages
      - organizations
      - sectors
    AssetSnapshotCreateRequest:
      oneOf:
      - type: object
        properties:
          asset:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
          details:
            type: object
            properties:
              status:
                type: string
              warnings:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                    message:
                      type: string
        required:
        - asset
        - details
      - type: object
        properties:
          source:
            type: object
            properties:
              schema:
                type: string
              survey:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    type:
                      type: string
              settings:
                type: object
                properties:
                  form_title:
                    type: string
              translated:
                type: array
                items:
                  type: string
              translation:
                type: array
                items:
                  type: string
          details:
            type: object
            properties:
              status:
                type: string
              warnings:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                    message:
                      type: string
        required:
        - details
        - source
    AssetSnapshotResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/asset_snapshots/sEMPghTguZsxj4rn4s9dvS/
        uid:
          type: string
        owner:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/users/bob/
        date_created:
          type: string
          format: date-time
        xml:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/asset_snapshots/sEMPghTguZsxj4rn4s9dvS/
        enketopreviewlink:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/asset_snapshots/sEMPghTguZsxj4rn4s9dvS/preview/
        asset:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
        asset_version_id:
          type: string
        details:
          type: object
          properties:
            status:
              type: string
            warnings:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
        source:
          type: object
          properties:
            schema:
              type: string
            survey:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  type:
                    type: string
            settings:
              type: object
              properties:
                form_title:
                  type: string
            translated:
              type: array
              items:
                type: string
            translation:
              type: array
              items:
                type: string
      required:
      - asset
      - asset_version_id
      - date_created
      - details
      - enketopreviewlink
      - owner
      - source
      - uid
      - url
      - xml
    AssetSubscriptionRequest:
      type: object
      properties:
        asset:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
      required:
      - asset
    AssetSubscriptionResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/asset_subscription/sEMPghTguZsxj4rn4s9dvS/
        asset:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
        uid:
          type: string
      required:
      - asset
      - uid
      - url
    AssetTypeEnum:
      enum:
      - text
      - empty
      - question
      - block
      - survey
      - template
      - collection
      type: string
      description: |-
        * `text` - text
        * `empty` - empty
        * `question` - question
        * `block` - block
        * `survey` - survey
        * `template` - template
        * `collection` - collection
    AssetUsageResponse:
      type: object
      properties:
        asset:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
        asset__name:
          type: string
        nlp_usage_current_period:
          type: object
          properties:
            total_nlp_asr_seconds:
              type: integer
            total_nlp_mt_characters:
              type: integer
          required:
          - total_nlp_asr_seconds
          - total_nlp_mt_characters
        nlp_usage_all_time:
          type: object
          properties:
            total_nlp_asr_seconds:
              type: integer
            total_nlp_mt_characters:
              type: integer
          required:
          - total_nlp_asr_seconds
          - total_nlp_mt_characters
        storage_bytes:
          type: integer
        submission_count_current_period:
          type: integer
        submission_count_all_time:
          type: integer
      required:
      - asset
      - asset__name
      - nlp_usage_all_time
      - nlp_usage_current_period
      - storage_bytes
      - submission_count_all_time
      - submission_count_current_period
    AssetValidContentResponse:
      type: object
      properties:
        kind:
          type: string
        uid:
          type: string
          default: akJTPb4JLVFqXMqYhKiPXZ
        data:
          type: object
          properties:
            schema:
              type: string
            survey:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  type:
                    type: string
                  $kuid:
                    type: string
                  $xpath:
                    type: string
                  $autoname:
                    type: string
            settings:
              type: object
            translated:
              type: array
              items:
                type: string
            translations:
              type: array
              items:
                type: string
      required:
      - data
      - kind
    AuditLogResponse:
      type: object
      properties:
        app_label:
          type: string
        model_name:
          type: string
        user:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/users/bob/
        user_uid:
          type: string
        username:
          type: string
        action:
          type: string
        metadata:
          type: object
          properties:
            source:
              type: string
            settings:
              type: object
              properties:
                sector:
                  type: object
                  properties:
                    new:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
                    old:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
                country:
                  type: object
                  properties:
                    added:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
                    removed:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
                description:
                  type: object
                  properties:
                    new:
                      type: string
                    old:
                      type: string
                country_codes:
                  type: object
                  properties:
                    added:
                      type: array
                      items:
                        type: string
                    removed:
                      type: array
                      items:
                        type: string
                data-table:
                  type: object
                  properties:
                    new:
                      type: object
                    old:
                      type: object
            asset_uid:
              type: string
            auth_type:
              type: string
            ip_address:
              type: string
            log_subtype:
              type: string
            project_owner:
              type: string
            latest_version_uid:
              type: string
            asset-files:
              type: object
              properties:
                uid:
                  type: string
                filename:
                  type: string
                md5_hash:
                  type: string
                download_url:
                  type: string
            permissions:
              type: object
              properties:
                added:
                  type: array
                  items:
                    type: string
                removed:
                  type: array
                  items:
                    type: string
                username:
                  type: string
            latest_deployed_version_uid:
              type: string
            submission:
              type: object
              properties:
                root_uuid:
                  type: string
                submitted_by:
                  type: string
            hook:
              type: object
              properties:
                uid:
                  type: string
                active:
                  type: boolean
                endpoint:
                  type: boolean
            name:
              type: object
              properties:
                new:
                  type: string
                old:
                  type: string
            shared_fields:
              type: object
              properties:
                added:
                  type: array
                  items:
                    type: string
                removed:
                  type: array
                  items:
                    type: string
        date_created:
          type: string
          format: date-time
        log_type:
          type: string
      required:
      - action
      - app_label
      - date_created
      - log_type
      - metadata
      - model_name
      - user
      - user_uid
      - username
    AuthLevelEnum:
      enum:
      - no_auth
      - basic_auth
      type: string
      description: |-
        * `no_auth` - no_auth
        * `basic_auth` - basic_auth
    ContentResponse:
      type: object
      properties:
        kind:
          type: string
        uid:
          type: string
          default: akJTPb4JLVFqXMqYhKiPXZ
        data:
          type: object
          properties:
            survey:
              type: array
              items:
                type: object
            settings:
              type: object
      required:
      - data
      - kind
    CreateFilePayload:
      oneOf:
      - type: object
        properties:
          user:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/users/bob/
          asset:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
          description:
            type: string
          file_type:
            type: string
          content:
            type: string
        required:
        - asset
        - content
        - description
        - file_type
        - user
      - type: object
        properties:
          user:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/users/bob/
          asset:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
          description:
            type: string
          file_type:
            type: string
          base64Encoded:
            type: string
          metadata:
            type: object
            properties:
              filename:
                type: string
            required:
            - filename
        required:
        - asset
        - base64Encoded
        - description
        - file_type
        - metadata
        - user
      - type: object
        properties:
          user:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/users/bob/
          asset:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
          description:
            type: string
          file_type:
            type: string
          metadata:
            type: object
            properties:
              redirect_url:
                type: string
                format: uri
            required:
            - redirect_url
        required:
        - asset
        - description
        - file_type
        - metadata
        - user
    DataBulkDelete:
      type: object
      properties:
        payload:
          type: array
          items:
            type: integer
      required:
      - payload
    DataBulkUpdateResponse:
      type: object
      properties:
        count:
          type: integer
        successes:
          type: integer
        failures:
          type: integer
        results:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
              status_code:
                type: integer
              message:
                type: string
      required:
      - count
      - failures
      - results
      - successes
    DataResponse:
      type: object
      properties:
        _id:
          type: integer
          title: ' id'
        formhub/uuid:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        Question_A/Enter_your_question:
          type: string
        Question_B:
          type: string
        __version__:
          type: string
          title: '  version  '
        meta/instanceID:
          type: string
        _xform_id_string:
          type: string
          title: ' xform id string'
        _uuid:
          type: string
          title: ' uuid'
        meta/rootUuid:
          type: string
        _attachments:
          type: object
          properties:
            download_url:
              type: string
              format: uri
              example: https://kf.kobotoolbox.org/api/v2/assets/aTPPUDScaFZkvBzd8FyK4Q/data/18/attachments/1
            download_large_url:
              type: string
              format: uri
              example: https://kf.kobotoolbox.org/api/v2/assets/aTPPUDScaFZkvBzd8FyK4Q/data/18/attachments/attWNZNwhXK6HDYVkZJSn9jy/large/
            download_medium_url:
              type: string
              format: uri
              example: https://kf.kobotoolbox.org/api/v2/assets/aTPPUDScaFZkvBzd8FyK4Q/data/18/attachments/attWNZNwhXK6HDYVkZJSn9jy/medium/
            download_small_url:
              type: string
              format: uri
              example: https://kf.kobotoolbox.org/api/v2/assets/aTPPUDScaFZkvBzd8FyK4Q/data/18/attachments/attWNZNwhXK6HDYVkZJSn9jy/small/
            mimetype:
              type: string
            filename:
              type: string
            uid:
              type: string
            question_xpath:
              type: string
          title: ' attachments'
        _status:
          type: string
          title: ' status'
        _geolocation:
          type: array
          items: {}
          title: ' geolocation'
        _submission_time:
          type: string
          format: date-time
          title: ' submission time'
        _tags:
          type: array
          items: {}
          title: ' tags'
        Notes:
          type: array
          items: {}
        _validation_status:
          title: ' validation status'
        _submitted_by:
          type: string
          title: ' submitted by'
      required:
      - Notes
      - Question_A/Enter_your_question
      - Question_B
      - __version__
      - _attachments
      - _geolocation
      - _id
      - _status
      - _submission_time
      - _submitted_by
      - _tags
      - _uuid
      - _validation_status
      - _xform_id_string
      - end
      - formhub/uuid
      - meta/instanceID
      - meta/rootUuid
      - start
    DataStatusesUpdate:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    DataValidationStatusUpdateResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        uid:
          type: string
        by_whom:
          type: string
        label:
          type: string
      required:
      - by_whom
      - label
      - timestamp
      - uid
    DeploymentCreateRequest:
      type: object
      properties:
        active:
          type: boolean
      required:
      - active
    DeploymentResponse:
      type: object
      properties:
        backend:
          type: string
        active:
          type: boolean
        version_id:
          type: string
        asset:
          $ref: '#/components/schemas/Asset'
      required:
      - active
      - asset
      - backend
      - version_id
    EmailAddress:
      type: object
      properties:
        primary:
          type: boolean
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        verified:
          type: boolean
          readOnly: true
      required:
      - email
      - primary
      - verified
    EmailRequestPayload:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    EnketoEditResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/edit/iXUdUc3w?instance_id=1824b282-f729-4944-b799-7a805d4564e1&return_url=false
        version:
          type: string
      required:
      - url
      - version
    EnketoViewResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/view/f93d2a488a2e35cedc336e84e1bd1edc?instance_id=1824b282-f729-4944-b799-7a805d4564e1&return_url=false
        version:
          type: string
      required:
      - url
      - version
    ErrorDetail:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    ErrorObject:
      type: object
      properties:
        detail: {}
      required:
      - detail
    ExportCreatePayload:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
        fields_from_all_versions:
          type: boolean
        group_sep:
          type: string
        hierarchy_in_labels:
          type: boolean
        include_media_url:
          type: boolean
        lang:
          type: string
        multiple_select:
          type: string
        submissions_id:
          type: array
          items:
            type: integer
        type:
          type: string
        flatten:
          type: boolean
        xls_types_as_text:
          type: boolean
        query:
          type: object
          properties:
            $and:
              type: array
              items:
                type: object
                properties:
                  _submission_time:
                    type: object
                    properties:
                      $gte:
                        type: string
                        format: date
      required:
      - fields
      - fields_from_all_versions
      - flatten
      - group_sep
      - hierarchy_in_labels
      - include_media_url
      - lang
      - multiple_select
      - query
      - submissions_id
      - type
      - xls_types_as_text
    ExportCreateResponse:
      type: object
      properties:
        status:
          type: string
          maxLength: 32
      required:
      - status
    ExportHistoryResponse:
      type: object
      properties:
        status:
          type: string
      required:
      - status
    ExportListResponse:
      type: object
      properties:
        uid:
          type: string
          maxLength: 24
        status:
          type: string
          maxLength: 32
        date_created:
          type: string
          format: date-time
      required:
      - date_created
      - status
      - uid
    ExportResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/exports/eYeXfo2KjbSzXgWuKsJNPY/
        status:
          type: string
        message:
          type: object
        uid:
          type: string
        date_created:
          type: string
          format: date-time
        last_submission_time:
          type: string
          format: date-time
        result:
          type: string
          format: uri
          example: https://kf.kobotoolbox.orguser/export/NEW PROJECT - all versions
            - False - 2025-01-01-01-01.csv
        data:
          type: object
          properties:
            lang:
              type: string
            name:
              type: string
            type:
              type: string
            fields:
              type: array
              items:
                type: string
            source:
              type: string
              format: uri
              example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
            group_sep:
              type: string
            multiple_select:
              type: string
            include_media_url:
              type: boolean
            hierarchy_in_labels:
              type: boolean
            processing_time_seconds:
              type: number
              format: float
            fields_from_all_versions:
              type: boolean
      required:
      - data
      - date_created
      - last_submission_time
      - message
      - result
      - status
      - uid
      - url
    ExportSettingCreatePayload:
      type: object
      properties:
        name:
          type: string
        export_settings:
          type: object
          properties:
            fields_from_all_versions:
              type: boolean
            group_sep:
              type: string
            hierarchy_in_labels:
              type: boolean
            lang:
              type: boolean
            multiple_select:
              type: string
            types:
              type: string
            fields:
              type: array
              items:
                type: string
            flatten:
              type: boolean
            xls_types_as_text:
              type: boolean
            include_media_url:
              type: boolean
            submission_ids:
              type: array
              items:
                type: integer
            query:
              type: object
              properties:
                $and:
                  type: array
                  items:
                    type: object
                    properties:
                      _submission_time:
                        type: object
                        properties:
                          $gte:
                            type: string
                            format: date
      required:
      - export_settings
      - name
    ExportSettingResponse:
      type: object
      properties:
        uid:
          type: string
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/export-settings/esMxJfzPhnWn6r2c3EKkuaV/
        data_url_csv:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/export-settings/esMxJfzPhnWn6r2c3EKkuaV/data.csv
        data_url_xlsx:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/export-settings/esMxJfzPhnWn6r2c3EKkuaV/data.xlsx
        name:
          type: string
        date_modified:
          type: string
          format: date-time
        export_settings:
          type: object
          properties:
            lang:
              type: string
            type:
              type: string
            fields:
              type: array
              items:
                type: string
            group_sep:
              type: string
            multiple_select:
              type: string
            include_media_url:
              type: boolean
            xls_types_as_text:
              type: boolean
            hierarchy_in_labels:
              type: boolean
            fields_from_all_versions:
              type: boolean
      required:
      - data_url_csv
      - data_url_xlsx
      - date_modified
      - export_settings
      - name
      - uid
      - url
    ExportTypeEnum:
      enum:
      - xml
      - json
      type: string
      description: |-
        * `xml` - xml
        * `json` - json
    ExternalResponse:
      type: object
      properties:
        root:
          type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  version:
                    type: string
                  field_value_1:
                    type: string
                  field_value_2:
                    type: string
      required:
      - root
    FilesResponse:
      type: object
      properties:
        uid:
          type: string
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/files/afSa8PqnoYe8vJqkrsGz3oN/
        asset:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
        user:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/users/bob/
        user__username:
          type: string
        file_type:
          type: string
        description:
          type: string
        date_created:
          type: string
          format: date-time
        content:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/files/afSa8PqnoYe8vJqkrsGz3oN/content/
        metadata:
          type: object
          properties:
            hash:
              type: string
            filename:
              type: string
            mimetype:
              type: string
      required:
      - asset
      - content
      - date_created
      - description
      - file_type
      - metadata
      - uid
      - url
      - user
      - user__username
    HashResponse:
      type: object
      properties:
        hash:
          type: string
      required:
      - hash
    HistoryActionResponse:
      type: object
      properties:
        actions:
          type: array
          items:
            type: string
      required:
      - actions
    HistoryListResponse:
      type: object
      properties:
        user:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/users/bob/
        user_uid:
          type: string
        username:
          type: string
        action:
          type: string
        metadata:
          type: object
          properties:
            source:
              type: string
            settings:
              type: object
              properties:
                sector:
                  type: object
                  properties:
                    new:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
                    old:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
                country:
                  type: object
                  properties:
                    added:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
                    removed:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
                description:
                  type: object
                  properties:
                    new:
                      type: string
                    old:
                      type: string
                country_codes:
                  type: object
                  properties:
                    added:
                      type: array
                      items:
                        type: string
                    removed:
                      type: array
                      items:
                        type: string
                data-table:
                  type: object
                  properties:
                    new:
                      type: object
                    old:
                      type: object
            asset_uid:
              type: string
            ip_address:
              type: string
            log_subtype:
              type: string
            project_owner:
              type: string
            latest_version_uid:
              type: string
            asset-files:
              type: object
              properties:
                uid:
                  type: string
                filename:
                  type: string
                md5_hash:
                  type: string
                download_url:
                  type: string
            permissions:
              type: object
              properties:
                added:
                  type: array
                  items:
                    type: string
                removed:
                  type: array
                  items:
                    type: string
                username:
                  type: string
            latest_deployed_version_uid:
              type: string
            submission:
              type: object
              properties:
                root_uuid:
                  type: string
                submitted_by:
                  type: string
            hook:
              type: object
              properties:
                uid:
                  type: string
                active:
                  type: boolean
                endpoint:
                  type: boolean
            name:
              type: object
              properties:
                new:
                  type: string
                old:
                  type: string
            shared_fields:
              type: object
              properties:
                added:
                  type: array
                  items:
                    type: string
                removed:
                  type: array
                  items:
                    type: string
        date_created:
          type: string
          format: date-time
      required:
      - action
      - date_created
      - metadata
      - user
      - user_uid
      - username
    Hook:
      type: object
      properties:
        active:
          type: boolean
        asset:
          type: integer
          readOnly: true
        auth_level:
          $ref: '#/components/schemas/AuthLevelEnum'
        date_modified:
          type: string
          format: date-time
          readOnly: true
        email_notification:
          type: boolean
        endpoint:
          type: string
          maxLength: 500
        export_type:
          $ref: '#/components/schemas/ExportTypeEnum'
        failed_count:
          type: integer
          readOnly: true
        logs_url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/hooks/hZzzeedWxQoFHgibsTCysv/logs/
          readOnly: true
        name:
          type: string
          maxLength: 255
        payload_template:
          type: string
          nullable: true
        pending_count:
          type: integer
          readOnly: true
        settings:
          type: object
          properties:
            password:
              type: string
            username:
              type: string
            custom_headers:
              type: object
              properties:
                value_field:
                  type: string
                value_field_2:
                  type: string
        subset_fields:
          type: array
          items:
            type: string
        success_count:
          type: integer
          readOnly: true
        uid:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
          readOnly: true
      required:
      - asset
      - date_modified
      - endpoint
      - failed_count
      - logs_url
      - name
      - pending_count
      - settings
      - subset_fields
      - success_count
      - uid
      - url
    HookLog:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/aTPPUDScaFZkvBzd8FyK4Q/hooks/hsw3Ec5vz7Lqg7TrwrxdaS/logs/hl8Ldv5m84SBpU5UB5J7QBD/
          readOnly: true
        uid:
          type: string
          readOnly: true
        submission_id:
          type: integer
          readOnly: true
        tries:
          type: integer
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/HookLogStatusEnum'
          readOnly: true
        status_str:
          type: string
        status_code:
          type: integer
          readOnly: true
          nullable: true
        message:
          type: string
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_modified
      - message
      - status
      - status_code
      - status_str
      - submission_id
      - tries
      - uid
      - url
    HookLogStatusEnum:
      enum:
      - 0
      - 1
      - 2
      type: integer
      description: |-
        * `0` - Failed
        * `1` - Pending
        * `2` - Success
    HookRetryResponse:
      type: object
      properties:
        detail:
          type: string
        pending_uids:
          type: array
          items:
            type: string
      required:
      - detail
      - pending_uids
    ImportCreateRequest:
      type: object
      properties:
        destination:
          type: string
          format: uri
        url:
          type: string
          format: uri
        name:
          type: string
        assetUid:
          type: string
      required:
      - assetUid
      - destination
      - url
    ImportCreateResponse:
      type: object
      properties:
        uid:
          type: string
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/imports/iYxVZhbZb6poxVpPqrd6eG/
        status:
          type: string
      required:
      - status
      - uid
      - url
    ImportResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/imports/iYxVZhbZb6poxVpPqrd6eG/
        status:
          type: string
        messages:
          type: object
          properties:
            updated:
              type: array
              items:
                type: object
                properties:
                  uid:
                    type: string
                  kind:
                    type: string
                  summary:
                    type: object
                    properties:
                      geo:
                        type: boolean
                      labels:
                        type: array
                        items:
                          type: string
                      columns:
                        type: array
                        items:
                          type: string
                      language:
                        type: array
                        items:
                          type: string
                      row_count:
                        type: integer
                      name_quality:
                        type: object
                        properties:
                          ok:
                            type: integer
                          bad:
                            type: integer
                          good:
                            type: integer
                          total:
                            type: integer
                          first:
                            type: object
                      default_translation:
                        type: string
                  owner__username:
                    type: string
            audit-logs:
              type: array
              items:
                type: object
                properties:
                  source:
                    type: string
                  asset_id:
                    type: integer
                  new_name:
                    type: string
                  old_name:
                    type: string
                  asset_uid:
                    type: string
                  ip_address:
                    type: string
                  project_owner:
                    type: string
                  latest_version_uid:
                    type: string
            error:
              type: string
            error_type:
              type: string
        uid:
          type: string
        date_created:
          type: string
          format: date-time
      required:
      - date_created
      - messages
      - status
      - uid
      - url
    InviteCreatePayload:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/InviteeRoleEnum'
        invitees:
          type: array
          items:
            type: string
      required:
      - invitees
      - role
    InviteCreateResponse:
      type: array
      items:
        type: object
        properties:
          url:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/organizations/orgR6zUBwMHop2mgGygtFd6c/invites/f3ba00b2-372b-4283-9d57-adbe7d5b1bf1/
          invited_by:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/users/bob/
          status:
            type: string
          invitee_role:
            enum:
            - admin
            - member
            type: string
            description: |-
              * `admin` - admin
              * `member` - member
          organization_name:
            type: string
          created:
            type: string
            format: date-time
          modified:
            type: string
            format: date-time
          invitee:
            type: string
        required:
        - created
        - invited_by
        - invitee
        - invitee_role
        - modified
        - organization_name
        - status
        - url
    InviteResponse:
      type: object
      properties:
        invitee_role:
          $ref: '#/components/schemas/InviteeRoleEnum'
        status:
          $ref: '#/components/schemas/InviteStatusChoicesEnum'
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/organizations/orgR6zUBwMHop2mgGygtFd6c/invites/f3ba00b2-372b-4283-9d57-adbe7d5b1bf1/
        invited_by:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/users/bob/
        organization_name:
          type: string
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
        invitee:
          type: string
      required:
      - created
      - invited_by
      - invitee
      - invitee_role
      - modified
      - organization_name
      - status
      - url
    InviteStatusChoicesEnum:
      enum:
      - accepted
      - cancelled
      - declined
      - expired
      - pending
      - resent
      type: string
      description: |-
        * `accepted` - Accepted
        * `cancelled` - Cancelled
        * `declined` - Declined
        * `expired` - Expired
        * `pending` - Pending
        * `resent` - Resent
    InviteeRoleEnum:
      enum:
      - admin
      - member
      type: string
      description: |-
        * `admin` - admin
        * `member` - member
    Language:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        code:
          type: string
          maxLength: 10
        featured:
          type: boolean
        transcription_services:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              name:
                type: string
          readOnly: true
        translation_services:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              name:
                type: string
          readOnly: true
        regions:
          type: array
          items:
            $ref: '#/components/schemas/LanguageRegion'
      required:
      - code
      - name
      - regions
      - transcription_services
      - translation_services
    LanguageList:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        code:
          type: string
          maxLength: 10
        featured:
          type: boolean
        transcription_services:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              name:
                type: string
          readOnly: true
        translation_services:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              name:
                type: string
          readOnly: true
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/language/en/
          readOnly: true
      required:
      - code
      - name
      - transcription_services
      - translation_services
      - url
    LanguageRegion:
      type: object
      properties:
        code:
          type: string
          maxLength: 20
        name:
          type: string
          maxLength: 200
      required:
      - code
      - name
    LogsRetryResponse:
      type: object
      properties:
        detail:
          type: string
        pending_uids:
          type: array
          items:
            type: string
      required:
      - detail
      - pending_uids
    MeListResponse:
      type: object
      properties:
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        server_time:
          type: string
          format: date-time
        date_joined:
          type: string
          format: date-time
        projects_url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/bob
        gravatar:
          type: string
          format: uri
          example: https://www.gravatar.com/avatar/5a9aec55090975e64e0f6b0a29110a5f?s=40
        last_login:
          type: string
          format: date-time
        extra_details:
          type: object
          properties:
            bio:
              type: string
            city:
              type: string
            name:
              type: string
            sector:
              type: string
            country:
              type: string
            twitter:
              type: string
            linkedin:
              type: string
            instagram:
              type: string
            organization:
              type: string
            last_ui_language:
              type: string
            organization_type:
              type: string
            organization_website:
              type: string
            project_views_settings:
              type: object
            require_auth:
              type: boolean
            newsletter_subscription:
              type: string
        git_rev:
          type: object
          properties:
            short:
              type: string
            long:
              type: string
            branch:
              type: string
            tag:
              type: string
        social_accounts:
          type: array
          items:
            type: object
            properties:
              provider:
                type: string
              uid:
                type: string
              last_joined:
                type: string
                format: date-time
              date_joined:
                type: string
                format: date-time
              email:
                type: string
                format: email
              username:
                type: string
        validated_password:
          type: boolean
        accepted_tos:
          type: boolean
        organization:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://kf.kobotoolbox.org/api/v2/organizations/orgzeph7Ub8tVmJ82JBbH96n/
            name:
              type: string
            uid:
              type: string
        extra_details__uid:
          type: string
      required:
      - accepted_tos
      - date_joined
      - email
      - extra_details
      - extra_details__uid
      - first_name
      - git_rev
      - gravatar
      - last_login
      - last_name
      - organization
      - projects_url
      - server_time
      - social_accounts
      - username
      - validated_password
    MemberListResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/organizations/orgR6zUBwMHop2mgGygtFd6c/members/bob/
        user:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/users/bob/
        user__username:
          type: string
        user__email:
          type: string
          format: email
        user__extra_details__name:
          type: string
        role:
          $ref: '#/components/schemas/MemberRoleEnum'
        user__has_mfa_enabled:
          type: boolean
        date_joined:
          type: string
          format: date-time
        user__is_active:
          type: boolean
        invite:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://kf.kobotoolbox.org/api/v2/organizations/orgR6zUBwMHop2mgGygtFd6c/invites/f3ba00b2-372b-4283-9d57-adbe7d5b1bf1/
            invited_by:
              type: string
              format: uri
              example: https://kf.kobotoolbox.org/api/v2/users/bob/
            status:
              enum:
              - accepted
              - cancelled
              - declined
              - expired
              - pending
              - resent
              type: string
              description: |-
                * `accepted` - Accepted
                * `cancelled` - Cancelled
                * `declined` - Declined
                * `expired` - Expired
                * `pending` - Pending
                * `resent` - Resent
            invitee_role:
              enum:
              - admin
              - member
              - owner
              type: string
              description: |-
                * `admin` - admin
                * `member` - member
                * `owner` - owner
            organization_name:
              type: string
            created:
              type: string
              format: date-time
            modified:
              type: string
              format: date-time
            invitee:
              type: string
          required:
          - created
          - invited_by
          - invitee_role
          - modified
          - organization_name
          - status
          - url
      required:
      - date_joined
      - invite
      - role
      - url
      - user
      - user__email
      - user__extra_details__name
      - user__has_mfa_enabled
      - user__is_active
      - user__username
    MemberRoleEnum:
      enum:
      - admin
      - member
      - owner
      type: string
      description: |-
        * `admin` - admin
        * `member` - member
        * `owner` - owner
    OpenRosaXFormResponse:
      type: object
      properties:
        html:
          type: object
          properties:
            head:
              type: object
              properties:
                title:
                  type: string
                model:
                  type: object
                  properties:
                    instance:
                      type: object
                      properties:
                        instanceUuid:
                          type: object
                          properties:
                            fieldName:
                              type: string
                            meta:
                              type: object
                              properties:
                                instanceID:
                                  type: string
            body:
              type: object
              properties:
                input:
                  type: object
                  properties:
                    label:
                      type: string
                    hint:
                      type: string
      required:
      - html
    Organization:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/organizations/orgzeph7Ub8tVmJ82JBbH96n/
          readOnly: true
        name:
          type: string
          description: The name of the organization
          maxLength: 200
        website:
          type: string
        organization_type:
          $ref: '#/components/schemas/OrganizationTypeEnum'
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        is_owner:
          type: boolean
          readOnly: true
        is_mmo:
          type: boolean
          readOnly: true
        request_user_role:
          allOf:
          - $ref: '#/components/schemas/MemberRoleEnum'
          readOnly: true
        members:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/organizations/{id}/members/
          readOnly: true
        assets:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/organizations/orgzeph7Ub8tVmJ82JBbH96n/assets/
          readOnly: true
        service_usage:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/organizations/orgzeph7Ub8tVmJ82JBbH96n/service_usage/
          readOnly: true
        asset_usage:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/organizations/orgzeph7Ub8tVmJ82JBbH96n/assets_usage/
          readOnly: true
      required:
      - asset_usage
      - assets
      - created
      - id
      - is_mmo
      - is_owner
      - members
      - modified
      - name
      - request_user_role
      - service_usage
      - url
    OrganizationAssetUsageResponse:
      type: object
      properties:
        asset:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/organizations/orgzeph7Ub8tVmJ82JBbH96n/assets/
        asset__name:
          type: string
        nlp_usage_current_period:
          type: object
          properties:
            total_nlp_asr_seconds:
              type: integer
            total_nlp_mt_characters:
              type: integer
          required:
          - total_nlp_asr_seconds
          - total_nlp_mt_characters
        nlp_usage_all_time:
          type: object
          properties:
            total_nlp_asr_seconds:
              type: integer
            total_nlp_mt_characters:
              type: integer
          required:
          - total_nlp_asr_seconds
          - total_nlp_mt_characters
        storage_bytes:
          type: integer
        submission_count_current_period:
          type: integer
        submission_count_all_time:
          type: integer
        deployment_status:
          type: string
      required:
      - asset
      - asset__name
      - deployment_status
      - nlp_usage_all_time
      - nlp_usage_current_period
      - storage_bytes
      - submission_count_all_time
      - submission_count_current_period
    OrganizationServiceUsageResponse:
      type: object
      properties:
        total_nlp_usage:
          type: object
          properties:
            asr_seconds_current_period:
              type: integer
            mt_characters_current_period:
              type: integer
            asr_seconds_all_time:
              type: integer
            mt_characters_all_time:
              type: integer
          required:
          - asr_seconds_all_time
          - asr_seconds_current_period
          - mt_characters_all_time
          - mt_characters_current_period
        total_storage_bytes:
          type: integer
        total_submission_count:
          type: object
          properties:
            all_time:
              type: integer
            current_period:
              type: integer
          required:
          - all_time
          - current_period
        balances:
          type: object
          properties:
            submission:
              $ref: '#/components/schemas/ServiceUsageBalanceData'
            storage_bytes:
              $ref: '#/components/schemas/ServiceUsageBalanceData'
            asr_seconds:
              $ref: '#/components/schemas/ServiceUsageBalanceData'
            mt_characters:
              $ref: '#/components/schemas/ServiceUsageBalanceData'
        current_period_start:
          type: string
          format: date-time
        current_period_end:
          type: string
          format: date-time
        last_updated:
          type: string
          format: date-time
      required:
      - balances
      - current_period_end
      - current_period_start
      - last_updated
      - total_nlp_usage
      - total_storage_bytes
      - total_submission_count
    OrganizationTypeEnum:
      enum:
      - non-profit
      - government
      - educational
      - commercial
      - none
      type: string
      description: |-
        * `non-profit` - Non-profit organization
        * `government` - Government institution
        * `educational` - Educational organization
        * `commercial` - A commercial/for-profit company
        * `none` - I am not associated with any organization
    PaginatedAccessLogResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AccessLogResponse'
    PaginatedAssetCountResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssetCountResponse'
    PaginatedAssetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        metadata:
          type: object
          properties:
            languages:
              type: array
              items:
                type: string
              example:
              - English (en)
            countries:
              type: array
              items:
                type: array
                items:
                  type: string
              example:
              - - FRA
                - France
            sectors:
              type: array
              items:
                type: array
                items:
                  type: string
              example:
              - - Public Administration
                - Public Administration
            organizations:
              type: array
              items:
                type: string
              example:
              - Kobotoolbox
        results:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
    PaginatedAssetSnapshotResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssetSnapshotResponse'
    PaginatedAssetSubscriptionResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssetSubscriptionResponse'
    PaginatedAssetUsageResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssetUsageResponse'
    PaginatedAuditLogResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogResponse'
    PaginatedDataResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?start=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?start=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DataResponse'
    PaginatedEmailAddressList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
    PaginatedExportResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExportResponse'
    PaginatedExportSettingResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExportSettingResponse'
    PaginatedFilesResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FilesResponse'
    PaginatedHistoryListResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/HistoryListResponse'
    PaginatedHookList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Hook'
    PaginatedHookLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/HookLog'
    PaginatedImportResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ImportResponse'
    PaginatedInviteResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/InviteResponse'
    PaginatedLanguageListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/LanguageList'
    PaginatedMemberListResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MemberListResponse'
    PaginatedOrganizationAssetUsageResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationAssetUsageResponse'
    PaginatedOrganizationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
    PaginatedPairedDataResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PairedDataResponse'
    PaginatedPermissionResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PermissionResponse'
    PaginatedProjectHistoryLogResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectHistoryLogResponse'
    PaginatedProjectInviteResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectInviteResponse'
    PaginatedProjectViewAssetResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectViewAssetResponse'
    PaginatedProjectViewListResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectViewListResponse'
    PaginatedProjectViewUserResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectViewUserResponse'
    PaginatedSocialAccountList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SocialAccount'
    PaginatedTagListResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TagListResponse'
    PaginatedTranscriptionServiceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TranscriptionService'
    PaginatedTranslationServiceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TranslationService'
    PaginatedUserListResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserListResponse'
    PaginatedVersionListResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/VersionListResponse'
    PairedData:
      type: object
      properties:
        source:
          type: string
          format: uri
        fields:
          type: array
          items:
            type: string
        filename:
          type: string
        source__name:
          type: string
          readOnly: true
      required:
      - filename
      - source
      - source__name
    PairedDataResponse:
      type: object
      properties:
        source:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
        source__name:
          type: string
          readOnly: true
        fields:
          type: array
          items:
            type: string
        filename:
          type: string
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a5owyo85mHyFazzgsZK45c/paired-data/pd9CWSKADt4T7h5bMKwhLqq
      required:
      - fields
      - filename
      - source
      - source__name
      - url
    PatchedAssetPatchRequest:
      oneOf:
      - type: object
        properties:
          content:
            type: string
          name:
            type: string
        required:
        - content
        - name
      - type: object
        properties:
          enabled:
            type: boolean
          fields:
            type: array
            items:
              type: string
        required:
        - enabled
        - fields
    PatchedCurrentUser:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        server_time:
          type: string
          format: date-time
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        projects_url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/bob
          readOnly: true
        gravatar:
          type: string
          format: uri
          example: https://www.gravatar.com/avatar/5a9aec55090975e64e0f6b0a29110a5f?s=40
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
        extra_details:
          type: object
          properties:
            bio:
              type: string
            city:
              type: string
            name:
              type: string
            sector:
              type: string
            country:
              type: string
            twitter:
              type: string
            linkedin:
              type: string
            instagram:
              type: string
            organization:
              type: string
            last_ui_language:
              type: string
            organization_type:
              type: string
            organization_website:
              type: string
            project_views_settings:
              type: object
            require_auth:
              type: boolean
            newsletter_subscription:
              type: string
        current_password:
          type: string
          writeOnly: true
        new_password:
          type: string
          writeOnly: true
        git_rev:
          type: string
          readOnly: true
        social_accounts:
          type: array
          items:
            $ref: '#/components/schemas/SocialAccount'
          readOnly: true
        validated_password:
          type: boolean
          readOnly: true
        accepted_tos:
          type: boolean
          description: |-
            Verifies user acceptance of terms of service (tos) by checking that the tos
            endpoint was called and stored the current time in the `private_data` property
          readOnly: true
        organization:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://kf.kobotoolbox.org/api/v2/organizations/orgzeph7Ub8tVmJ82JBbH96n/
            name:
              type: string
            uid:
              type: string
          readOnly: true
        extra_details__uid:
          type: string
          readOnly: true
    PatchedDataBulkUpdate:
      type: object
      properties:
        payload:
          type: object
          properties:
            submission_ids:
              type: array
              items:
                type: integer
            data:
              type: object
              properties:
                field_to_update:
                  type: string
    PatchedDataValidationStatusUpdatePayload:
      type: object
      properties:
        validation_status.uid:
          type: string
    PatchedDataValidationStatusesUpdatePayload:
      type: object
      properties:
        payload:
          type: object
          properties:
            submission_ids:
              type: array
              items:
                type: integer
            validation_status.uid:
              type: string
    PatchedDeploymentPatchRequest:
      type: object
      properties:
        active:
          type: boolean
        version_id:
          type: string
    PatchedExportSettingUpdatePayload:
      type: object
      properties:
        name:
          type: string
        export_settings:
          type: object
          properties:
            fields_from_all_versions:
              type: boolean
            group_sep:
              type: string
            hierarchy_in_labels:
              type: boolean
            lang:
              type: string
            multiple_select:
              type: string
            type:
              type: string
            fields:
              type: array
              items:
                type: string
    PatchedHook:
      type: object
      properties:
        active:
          type: boolean
        asset:
          type: integer
          readOnly: true
        auth_level:
          $ref: '#/components/schemas/AuthLevelEnum'
        date_modified:
          type: string
          format: date-time
          readOnly: true
        email_notification:
          type: boolean
        endpoint:
          type: string
          maxLength: 500
        export_type:
          $ref: '#/components/schemas/ExportTypeEnum'
        failed_count:
          type: integer
          readOnly: true
        logs_url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/hooks/hZzzeedWxQoFHgibsTCysv/logs/
          readOnly: true
        name:
          type: string
          maxLength: 255
        payload_template:
          type: string
          nullable: true
        pending_count:
          type: integer
          readOnly: true
        settings:
          type: object
          properties:
            password:
              type: string
            username:
              type: string
            custom_headers:
              type: object
              properties:
                value_field:
                  type: string
                value_field_2:
                  type: string
        subset_fields:
          type: array
          items:
            type: string
        success_count:
          type: integer
          readOnly: true
        uid:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
          readOnly: true
    PatchedHookLog:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/aTPPUDScaFZkvBzd8FyK4Q/hooks/hsw3Ec5vz7Lqg7TrwrxdaS/logs/hl8Ldv5m84SBpU5UB5J7QBD/
          readOnly: true
        uid:
          type: string
          readOnly: true
        submission_id:
          type: integer
          readOnly: true
        tries:
          type: integer
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/HookLogStatusEnum'
          readOnly: true
        status_str:
          type: string
        status_code:
          type: integer
          readOnly: true
          nullable: true
        message:
          type: string
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
    PatchedInvitePatchPayload:
      oneOf:
      - type: object
        properties:
          status:
            $ref: '#/components/schemas/InviteStatusChoicesEnum'
        required:
        - status
      - type: object
        properties:
          role:
            $ref: '#/components/schemas/InviteeRoleEnum'
        required:
        - role
    PatchedInviteUpdatePayload:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/InviteStatusChoicesEnum'
    PatchedMemberPatchRequest:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/InviteeRoleEnum'
    PatchedOrganizationPatchPayload:
      type: object
      properties:
        name:
          type: string
        website:
          type: string
        organization_type:
          type: string
    PatchedPairedDataPatchPayload:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
        filename:
          type: string
    PatchedPermissionAssignmentCloneRequest:
      type: object
      properties:
        clone_from:
          type: string
    PermissionAssignmentBulkRequest:
      type: object
      properties:
        user:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/users/bob/
        permission:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/permission-assignments/pGaXCTDAbdZKLXoXAXd3M4/
      required:
      - permission
      - user
    PermissionAssignmentCreateRequest:
      oneOf:
      - type: object
        properties:
          permission:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/permissions/change_asset/
          user:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/users/bob/
        additionalProperties: false
        required:
        - permission
        - user
      - type: object
        properties:
          partial_permission:
            type: array
            items:
              type: object
              properties:
                filter:
                  type: array
                  items:
                    type: object
                    properties:
                      _submitted_by:
                        type: object
                        properties:
                          $in:
                            type: array
                            items:
                              type: string
                url:
                  type: string
                  format: uri
                  example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/permission-assignments/pGaXCTDAbdZKLXoXAXd3M4/
          permission:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/permissions/change_asset/
          user:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/users/bob/
        required:
        - partial_permission
        - permission
        - user
    PermissionAssignmentResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/permission-assignments/pGaXCTDAbdZKLXoXAXd3M4/
        user:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/users/bob/
        permission:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/permissions/change_asset/
        label:
          type: string
          readOnly: true
      required:
      - label
      - permission
      - url
      - user
    PermissionResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/permissions/change_submissions/
          readOnly: true
        codename:
          type: string
        implied:
          type: array
          items:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/permissions/change_submissions/
        contradictory:
          type: array
          items:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/permissions/change_submissions/
        name:
          type: string
      required:
      - codename
      - contradictory
      - implied
      - name
      - url
    ProjectHistoryLogResponse:
      type: object
      properties:
        user:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/users/bob/
        user_uid:
          type: string
        username:
          type: string
        action:
          type: string
        metadata:
          type: object
          properties:
            source:
              type: string
            asset_uid:
              type: string
            ip_address:
              type: string
            cloned_from:
              type: string
            log_subtype:
              type: string
            paired-data:
              type: object
              properties:
                fields:
                  type: array
                  items:
                    type: string
                source_uid:
                  type: string
                source_name:
                  type: string
            username:
              type: string
            settings:
              type: object
              properties:
                sector:
                  type: object
                  properties:
                    new:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
                    old:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
                country:
                  type: object
                  properties:
                    added:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
                    removed:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
                description:
                  type: object
                  properties:
                    new:
                      type: string
                    old:
                      type: string
                country_codes:
                  type: object
                  properties:
                    added:
                      type: array
                      items:
                        type: string
                    removed:
                      type: array
                      items:
                        type: string
                data-table:
                  type: object
                  properties:
                    new:
                      type: object
                    old:
                      type: object
            asset-files:
              type: object
              properties:
                uid:
                  type: string
                filename:
                  type: string
                md5_hash:
                  type: string
                download_url:
                  type: string
            permissions:
              type: object
              properties:
                added:
                  type: array
                  items:
                    type: string
                removed:
                  type: array
                  items:
                    type: string
                username:
                  type: string
            project_owner:
              type: string
            latest_version_uid:
              type: string
            submission:
              type: object
              properties:
                root_uuid:
                  type: string
                submitted_by:
                  type: string
                status:
                  type: string
            hook:
              type: object
              properties:
                uid:
                  type: string
                active:
                  type: boolean
                endpoint:
                  type: boolean
            name:
              type: object
              properties:
                new:
                  type: string
                old:
                  type: string
            shared_fields:
              type: object
              properties:
                added:
                  type: array
                  items:
                    type: string
                removed:
                  type: array
                  items:
                    type: string
        date_created:
          type: string
          format: date-time
      required:
      - action
      - date_created
      - metadata
      - user
      - user_uid
      - username
    ProjectInviteCreatePayload:
      type: object
      properties:
        recipient:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/users/bob/
        assets:
          type: array
          items:
            type: string
      required:
      - assets
      - recipient
    ProjectInviteResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/project-ownership/invites/poi52fGkwDjQeZkUxcaou39q/
        sender |  recipient:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/users/bob/
        status:
          $ref: '#/components/schemas/InviteStatusChoicesEnum'
        date_created:
          type: string
          format: date-time
        date_modified:
          type: string
          format: date-time
        transfers:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: uri
                example: https://kf.kobotoolbox.org/api/v2/project-ownership/invites/poi52fGkwDjQeZkUxcaou39q/transfers/pot54pTqM5qwKdZ4wnNdiwDY/
              asset:
                type: string
                format: uri
                example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
              status:
                type: string
              error:
                type: string
              date_modified:
                type: string
                format: date-time
      required:
      - date_created
      - date_modified
      - sender |  recipient
      - status
      - transfers
      - url
    ProjectViewAssetResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/project-views/pvyHWBnzRw3GCJpFs6cMdem/assets/
        date_created:
          type: string
          format: date-time
        date_modified:
          type: string
          format: date-time
        date_deployed:
          type: string
          format: date-time
        owner:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/project-views/pvyHWBnzRw3GCJpFs6cMdem/users/
        owner__username:
          type: string
        owner__email:
          type: string
          format: email
        owner__name:
          type: string
        owner__organization:
          type: string
        uid:
          type: string
        name:
          type: string
        settings:
          type: object
          properties:
            sector:
              type: object
              properties:
                label:
                  type: string
                value:
                  type: string
            country:
              type: array
              items:
                type: object
                properties:
                  label:
                    type: string
                  value:
                    type: string
            description:
              type: string
            collects_pii:
              type: string
            organization:
              type: string
            country_codes:
              type: array
              items:
                type: string
            operational_purpose:
              type: string
        languages:
          type: array
          items:
            type: string
        has_deployment:
          type: boolean
        deployment__active:
          type: boolean
        deployment__submission_count:
          type: integer
        deployment_status:
          type: string
        asset_type:
          type: string
        downloads:
          type: array
          items:
            type: object
            properties:
              format:
                type: string
              url:
                type: string
                format: uri
                example: https://kf.kobotoolbox.org/api/v2/assets/aTPPUDScaFZkvBzd8FyK4Q/
        owner_label:
          type: string
      required:
      - asset_type
      - date_created
      - date_deployed
      - date_modified
      - deployment__active
      - deployment__submission_count
      - deployment_status
      - downloads
      - has_deployment
      - languages
      - name
      - owner
      - owner__email
      - owner__name
      - owner__organization
      - owner__username
      - owner_label
      - settings
      - uid
      - url
    ProjectViewExportCreateResponse:
      type: object
      properties:
        status:
          type: string
          maxLength: 32
      required:
      - status
    ProjectViewExportResponse:
      type: object
      properties:
        status:
          type: string
          maxLength: 32
        result:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/private-media/bob/exports/assets-bob-view_pvNNUan8EBhzfkrv6sCNuzR-2025-08-11T143443Z.csv
      required:
      - result
      - status
    ProjectViewListResponse:
      type: object
      properties:
        uid:
          type: string
          maxLength: 32
        name:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/private-media/bob/exports/assets-bob-view_pvNNUan8EBhzfkrv6sCNuzR-2025-08-11T143443Z.csv
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/project-views/pvyHWBnzRw3GCJpFs6cMdem/
        assets:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/project-views/pvyHWBnzRw3GCJpFs6cMdem/assets/
        assets_export:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/project-views/pvyHWBnzRw3GCJpFs6cMdem/assets/export/
        users:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/project-views/pvyHWBnzRw3GCJpFs6cMdem/users/
        users_export:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/project-views/pvyHWBnzRw3GCJpFs6cMdem/users/export/
        countries:
          type: array
          items:
            type: string
        permissions:
          type: array
          items:
            type: string
        assigned_users:
          type: array
          items:
            type: string
      required:
      - assets
      - assets_export
      - assigned_users
      - countries
      - name
      - permissions
      - uid
      - url
      - users
      - users_export
    ProjectViewUserResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        is_superuser:
          type: boolean
        date_joined:
          type: string
          format: date-time
        last_login:
          type: string
          format: date-time
        is_active:
          type: boolean
        email:
          type: string
          format: email
        asset_count:
          type: integer
        metadata:
          type: object
          properties:
            city:
              type: string
            name:
              type: string
            sector:
              type: string
            country:
              type: string
            organization:
              type: string
            last_ui_language:
              type: string
            organization_type:
              type: string
            organization_website:
              type: string
            project_view_settings:
              type: object
              properties:
                my_project_view_name:
                  type: object
                  properties:
                    order:
                      type: object
                    fields:
                      type: array
                      items:
                        type: string
                    filters:
                      type: array
                      items:
                        type: string
      required:
      - asset_count
      - date_joined
      - email
      - id
      - is_active
      - is_superuser
      - last_login
      - metadata
      - username
    ReportResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a5owyo85mHyFazzgsZK45c/reports/
        count:
          type: integer
        list:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              row:
                type: object
                properties:
                  type:
                    type: string
              data:
                type: object
                properties:
                  total_count:
                    type: integer
                  not_provided:
                    type: integer
                  provided:
                    type: integer
                  show_graph:
                    type: boolean
              kuid:
                type: string
              style:
                type: object
      required:
      - count
      - list
      - url
    ServiceUsageBalanceData:
      type: object
      properties:
        effective_limit:
          type: integer
        balance_value:
          type: integer
        balance_percent:
          type: integer
        exceeded:
          type: integer
      required:
      - balance_percent
      - balance_value
      - effective_limit
      - exceeded
    ServiceUsageResponse:
      type: object
      properties:
        total_nlp_usage:
          type: object
          properties:
            asr_seconds_current_period:
              type: integer
            mt_characters_current_period:
              type: integer
            asr_seconds_all_time:
              type: integer
            mt_characters_all_time:
              type: integer
          required:
          - asr_seconds_all_time
          - asr_seconds_current_period
          - mt_characters_all_time
          - mt_characters_current_period
        total_storage_bytes:
          type: integer
        total_submission_count:
          type: object
          properties:
            all_time:
              type: integer
            current_period:
              type: integer
        balances:
          type: object
          properties:
            submission:
              $ref: '#/components/schemas/ServiceUsageBalanceData'
            storage_bytes:
              $ref: '#/components/schemas/ServiceUsageBalanceData'
            asr_seconds:
              $ref: '#/components/schemas/ServiceUsageBalanceData'
            mt_characters:
              $ref: '#/components/schemas/ServiceUsageBalanceData'
        current_period_start:
          type: string
          format: date-time
        current_period_end:
          type: string
          format: date-time
        last_updated:
          type: string
          format: date-time
      required:
      - balances
      - current_period_end
      - current_period_start
      - last_updated
      - total_nlp_usage
      - total_storage_bytes
      - total_submission_count
    SocialAccount:
      type: object
      description: serialize allauth SocialAccounts for use with a REST API
      properties:
        provider:
          type: string
          maxLength: 200
        uid:
          type: string
          maxLength: 191
        last_login:
          type: string
          format: date-time
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        username:
          type: string
          readOnly: true
      required:
      - date_joined
      - email
      - last_login
      - provider
      - uid
      - username
    TagListResponse:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/tags/tg3c5giitsQUMCJNNoDEpQ/
      required:
      - name
      - url
    TagRetrieveResponse:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/tags/tg3c5giitsQUMCJNNoDEpQ/
        assets:
          type: array
          items:
            type: string
            format: uri
            example: https://kf.kobotoolbox.org/api/v2/assets/a5owyo85mHyFazzgsZK45c/
        parent:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/tags/
        uid:
          type: string
      required:
      - assets
      - name
      - parent
      - uid
      - url
    TermsOfServiceResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/terms-of-service/terms_of_service_fr/
        slug:
          type: string
        body:
          type: string
      required:
      - body
      - slug
      - url
    TranscriptionService:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        code:
          type: string
          maxLength: 10
      required:
      - code
      - name
    TransferListResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/project-ownership/invites/poi52fGkwDjQeZkUxcaou39q/transfers/pot54pTqM5qwKdZ4wnNdiwDY/
        asset:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/
        status:
          type: string
        error:
          type: string
        date_modified:
          type: string
          format: date-time
        statuses:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
              status_type:
                type: string
              error:
                type: string
      required:
      - asset
      - date_modified
      - error
      - status
      - statuses
      - url
    TranslationService:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        code:
          type: string
          maxLength: 10
      required:
      - code
      - name
    UserListResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        is_superuser:
          type: boolean
        date_joined:
          type: string
          format: date-time
        last_login:
          type: string
          format: date-time
        is_active:
          type: boolean
        email:
          type: string
          format: email
        asset_count:
          type: integer
        metadata:
          type: object
          properties:
            name:
              type: string
            sector:
              type: string
            country:
              type: string
            organization:
              type: string
            last_ui_language:
              type: string
            organization_type:
              type: string
            organization_website:
              type: string
            project_views_settings:
              type: object
              properties:
                kobo_my_project:
                  type: object
                  properties:
                    order:
                      type: object
                    fields:
                      type: array
                      items:
                        type: string
                    filters:
                      type: array
                      items:
                        type: string
      required:
      - asset_count
      - date_joined
      - email
      - id
      - is_active
      - is_superuser
      - last_login
      - metadata
      - username
    UserRetrieveResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/users/bob/
        username:
          type: string
        date_joined:
          type: string
          format: date-time
        public_collection_subscribers_count:
          type: integer
        public_collections_count:
          type: integer
      required:
      - date_joined
      - public_collection_subscribers_count
      - public_collections_count
      - url
      - username
    VersionListResponse:
      type: object
      properties:
        uid:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/versions/vf7pK9SmkJPYZVzr4uypi4/
          readOnly: true
        content_hash:
          type: string
          readOnly: true
        date_deployed:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - content_hash
      - date_deployed
      - date_modified
      - uid
      - url
    VersionRetrieveResponse:
      type: object
      properties:
        uid:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          example: https://kf.kobotoolbox.org/api/v2/assets/a3C9wWefqZVkChNLKqqXVZ/versions/vf7pK9SmkJPYZVzr4uypi4/
          readOnly: true
        content_hash:
          type: string
          readOnly: true
        date_deployed:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        content:
          type: object
          properties:
            schema:
              type: string
            survey:
              type: array
              items:
                type: object
                properties:
                  hint:
                    type: array
                    items:
                      type: string
                  type:
                    type: string
                  $kuid:
                    type: string
                  label:
                    type: array
                    items:
                      type: string
                  $xpath:
                    type: string
                  required:
                    type: boolean
                  $autoname:
                    type: string
            settings:
              type: object
              properties:
                default_language:
                  type: string
            translated:
              type: array
              items:
                type: string
            translation:
              type: array
              items:
                type: string
          readOnly: true
      required:
      - content
      - content_hash
      - date_deployed
      - date_modified
      - uid
      - url
    historyExportResponse:
      type: object
      properties:
        status:
          type: string
      required:
      - status
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    TokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: 'Token-based authentication. Use the format: `Token <your-token>`'
