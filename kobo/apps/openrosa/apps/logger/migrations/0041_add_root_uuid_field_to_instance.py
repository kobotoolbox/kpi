# flake8: noqa: E501
# Generated by Django 4.2.15 on 2025-01-07 16:10

from django.conf import settings
from django.db import migrations, models


def manually_create_indexes_instructions(apps, schema_editor):
    print(
        """
        ⚠️ ATTENTION ⚠️
        Run the SQL queries below in PostgreSQL directly:

            > CREATE INDEX CONCURRENTLY "logger_instance_root_uuid_56e971ea" ON "logger_instance" ("root_uuid");
            > CREATE UNIQUE INDEX CONCURRENTLY "unique_root_uuid_per_xform_idx" ON "logger_instance" ("root_uuid", "xform_id");
            > ALTER TABLE "logger_instance" ADD CONSTRAINT "unique_root_uuid_per_xform" UNIQUE USING INDEX "unique_root_uuid_per_xform_idx";

        """
    )


def manually_drop_indexes_instructions(apps, schema_editor):
    print(
        """
        ⚠️ ATTENTION ⚠️
        Run the SQL queries below in PostgreSQL directly:

            > ALTER TABLE "logger_instance" DROP CONSTRAINT "unique_root_uuid_per_xform";
            > DROP INDEX CONCURRENTLY IF EXISTS "logger_instance_root_uuid_56e971ea";
            > DROP INDEX CONCURRENTLY IF EXISTS "unique_root_uuid_per_xform";

        """
    )


def get_conditional_operations():

    if settings.SKIP_HEAVY_MIGRATIONS:
        return [
            migrations.RunPython(
                manually_create_indexes_instructions,
                manually_drop_indexes_instructions,
            )
        ]
    else:
        # Add index on `root_uuid`
        return [
            migrations.AlterField(
                model_name='instance',
                name='root_uuid',
                field=models.CharField(db_index=True, max_length=249, null=True),
            ),
            migrations.AddConstraint(
                model_name='instance',
                constraint=models.UniqueConstraint(
                    fields=('root_uuid', 'xform'), name='unique_root_uuid_per_xform'
                ),
            )
        ]


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('logger', '0040_increase_file_fields_max_length'),
    ]

    operations = [
        migrations.AddField(
            model_name='instance',
            name='root_uuid',
            field=models.CharField(max_length=249, null=True),
        ),
        *get_conditional_operations(),
    ]
