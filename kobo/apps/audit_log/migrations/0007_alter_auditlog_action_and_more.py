# Generated by Django 4.2.11 on 2024-07-31 20:00

from django.conf import settings
from django.db import migrations, models


def manually_create_indexes_instructions(apps, schema_editor):
    print(
        """
        !!! ATTENTION !!!
        If you have existing projects you need to run the SQL queries below in PostgreSQL directly:

           > CREATE INDEX CONCURRENTLY audit_log_asset_action_idx ON public.audit_log_auditlog
           USING btree (((metadata -> 'asset_uid'::text)), action);
           > CREATE INDEX CONCURRENTLY audit_log_asset_uid_idx ON public.audit_log_auditlog
            USING btree (((metadata -> 'asset_uid'::text)))

        Otherwise, the audit log table may be unusable.
        """
    )


def manually_drop_indexes_instructions(apps, schema_editor):
    print(
        """
        !!! ATTENTION !!!
        Run the SQL queries below in PostgreSQL directly:

           > DROP INDEX IF EXISTS "audit_log_asset_action_idx";
           > DROP INDEX IF EXISTS "audit_log_asset_uid_idx";

        """
    )


class Migration(migrations.Migration):

    dependencies = [
        ('audit_log', '0001_squashed_0006_remove_index_together'),
    ]

    operations = [
        migrations.AlterField(
            model_name='auditlog',
            name='action',
            field=models.CharField(choices=[('create', 'CREATE'), ('delete', 'DELETE'), ('in-trash', 'IN TRASH'), ('put-back', 'PUT BACK'), ('remove', 'REMOVE'), ('update', 'UPDATE'), ('auth', 'AUTH')], db_index=True, default='delete', max_length=10),
        ),
    ]
    if not settings.SKIP_HEAVY_MIGRATIONS:
        operations.extend(
            [
                migrations.AddIndex(
                    model_name='auditlog',
                    index=models.Index(models.F('metadata__asset_uid'), models.F('action'),
                                       name='audit_log_asset_action_idx'),
                ),
                migrations.AddIndex(
                    model_name='auditlog',
                    index=models.Index(models.F('metadata__asset_uid'), name='audit_log_asset_uid_idx'),
                ),
            ]
        )
    else:
        operations.extend([
            migrations.RunPython(
                manually_create_indexes_instructions,
                manually_drop_indexes_instructions,
            )
        ])
